// Code generated by protoc-gen-go.
// source: encounter.proto
// DO NOT EDIT!

package buffer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Encounter struct {
	Status           string              `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Account          []*Account          `protobuf:"bytes,2,rep,name=account" json:"account,omitempty"`
	StatusHistory    []*StatusHistory    `protobuf:"bytes,3,rep,name=statusHistory" json:"statusHistory,omitempty"`
	Participant      []*Participant      `protobuf:"bytes,4,rep,name=participant" json:"participant,omitempty"`
	Hospitalization  *Hospitalization    `protobuf:"bytes,5,opt,name=hospitalization" json:"hospitalization,omitempty"`
	ResourceType     string              `protobuf:"bytes,6,opt,name=resourceType" json:"resourceType,omitempty"`
	Text             *Text               `protobuf:"bytes,7,opt,name=text" json:"text,omitempty"`
	IncomingReferral []*IncomingReferral `protobuf:"bytes,8,rep,name=incomingReferral" json:"incomingReferral,omitempty"`
	Period           *Period             `protobuf:"bytes,9,opt,name=period" json:"period,omitempty"`
	Class            *Class              `protobuf:"bytes,10,opt,name=class" json:"class,omitempty"`
	Priority         *Priority           `protobuf:"bytes,11,opt,name=priority" json:"priority,omitempty"`
	Reason           []*Reason           `protobuf:"bytes,12,rep,name=reason" json:"reason,omitempty"`
	Diagnosis        []*Diagnosis        `protobuf:"bytes,13,rep,name=diagnosis" json:"diagnosis,omitempty"`
	ServiceProvider  *ServiceProvider    `protobuf:"bytes,14,opt,name=serviceProvider" json:"serviceProvider,omitempty"`
	Appointment      *Appointment        `protobuf:"bytes,15,opt,name=appointment" json:"appointment,omitempty"`
	EpisodeOfCare    []*EpisodeOfCare    `protobuf:"bytes,16,rep,name=episodeOfCare" json:"episodeOfCare,omitempty"`
	Identifier       []*Identifier       `protobuf:"bytes,17,rep,name=identifier" json:"identifier,omitempty"`
	Type             []*Type             `protobuf:"bytes,18,rep,name=type" json:"type,omitempty"`
	Id               string              `protobuf:"bytes,19,opt,name=id" json:"id,omitempty"`
	PartOf           *PartOf             `protobuf:"bytes,20,opt,name=partOf" json:"partOf,omitempty"`
	Subject          *Subject            `protobuf:"bytes,21,opt,name=subject" json:"subject,omitempty"`
}

func (m *Encounter) Reset()                    { *m = Encounter{} }
func (m *Encounter) String() string            { return proto.CompactTextString(m) }
func (*Encounter) ProtoMessage()               {}
func (*Encounter) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Encounter) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Encounter) GetAccount() []*Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Encounter) GetStatusHistory() []*StatusHistory {
	if m != nil {
		return m.StatusHistory
	}
	return nil
}

func (m *Encounter) GetParticipant() []*Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *Encounter) GetHospitalization() *Hospitalization {
	if m != nil {
		return m.Hospitalization
	}
	return nil
}

func (m *Encounter) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *Encounter) GetText() *Text {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Encounter) GetIncomingReferral() []*IncomingReferral {
	if m != nil {
		return m.IncomingReferral
	}
	return nil
}

func (m *Encounter) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Encounter) GetClass() *Class {
	if m != nil {
		return m.Class
	}
	return nil
}

func (m *Encounter) GetPriority() *Priority {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Encounter) GetReason() []*Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Encounter) GetDiagnosis() []*Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *Encounter) GetServiceProvider() *ServiceProvider {
	if m != nil {
		return m.ServiceProvider
	}
	return nil
}

func (m *Encounter) GetAppointment() *Appointment {
	if m != nil {
		return m.Appointment
	}
	return nil
}

func (m *Encounter) GetEpisodeOfCare() []*EpisodeOfCare {
	if m != nil {
		return m.EpisodeOfCare
	}
	return nil
}

func (m *Encounter) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Encounter) GetType() []*Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Encounter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Encounter) GetPartOf() *PartOf {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *Encounter) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

type PartOf struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *PartOf) Reset()                    { *m = PartOf{} }
func (m *PartOf) String() string            { return proto.CompactTextString(m) }
func (*PartOf) ProtoMessage()               {}
func (*PartOf) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *PartOf) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type EpisodeOfCare struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *EpisodeOfCare) Reset()                    { *m = EpisodeOfCare{} }
func (m *EpisodeOfCare) String() string            { return proto.CompactTextString(m) }
func (*EpisodeOfCare) ProtoMessage()               {}
func (*EpisodeOfCare) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *EpisodeOfCare) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Appointment struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Appointment) Reset()                    { *m = Appointment{} }
func (m *Appointment) String() string            { return proto.CompactTextString(m) }
func (*Appointment) ProtoMessage()               {}
func (*Appointment) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *Appointment) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type ServiceProvider struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *ServiceProvider) Reset()                    { *m = ServiceProvider{} }
func (m *ServiceProvider) String() string            { return proto.CompactTextString(m) }
func (*ServiceProvider) ProtoMessage()               {}
func (*ServiceProvider) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *ServiceProvider) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Diagnosis struct {
	Role      *Role      `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	Condition *Condition `protobuf:"bytes,2,opt,name=condition" json:"condition,omitempty"`
	Rank      int64      `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
}

func (m *Diagnosis) Reset()                    { *m = Diagnosis{} }
func (m *Diagnosis) String() string            { return proto.CompactTextString(m) }
func (*Diagnosis) ProtoMessage()               {}
func (*Diagnosis) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *Diagnosis) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Diagnosis) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Diagnosis) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

type Condition struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *Condition) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Class struct {
	Code    string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	System  string `protobuf:"bytes,2,opt,name=system" json:"system,omitempty"`
	Display string `protobuf:"bytes,3,opt,name=display" json:"display,omitempty"`
}

func (m *Class) Reset()                    { *m = Class{} }
func (m *Class) String() string            { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()               {}
func (*Class) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *Class) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Class) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *Class) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

type IncomingReferral struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *IncomingReferral) Reset()                    { *m = IncomingReferral{} }
func (m *IncomingReferral) String() string            { return proto.CompactTextString(m) }
func (*IncomingReferral) ProtoMessage()               {}
func (*IncomingReferral) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *IncomingReferral) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Hospitalization struct {
	Origin             *Origin               `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	AdmitSource        *AdmitSource          `protobuf:"bytes,2,opt,name=admitSource" json:"admitSource,omitempty"`
	SpecialCourtesy    []*SpecialCourtesy    `protobuf:"bytes,3,rep,name=specialCourtesy" json:"specialCourtesy,omitempty"`
	SpecialArrangement []*SpecialArrangement `protobuf:"bytes,4,rep,name=specialArrangement" json:"specialArrangement,omitempty"`
	DietPreference     []*DietPreference     `protobuf:"bytes,5,rep,name=dietPreference" json:"dietPreference,omitempty"`
	ReAdmission        *ReAdmission          `protobuf:"bytes,6,opt,name=reAdmission" json:"reAdmission,omitempty"`
	Destination        *Destination          `protobuf:"bytes,7,opt,name=destination" json:"destination,omitempty"`
}

func (m *Hospitalization) Reset()                    { *m = Hospitalization{} }
func (m *Hospitalization) String() string            { return proto.CompactTextString(m) }
func (*Hospitalization) ProtoMessage()               {}
func (*Hospitalization) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *Hospitalization) GetOrigin() *Origin {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *Hospitalization) GetAdmitSource() *AdmitSource {
	if m != nil {
		return m.AdmitSource
	}
	return nil
}

func (m *Hospitalization) GetSpecialCourtesy() []*SpecialCourtesy {
	if m != nil {
		return m.SpecialCourtesy
	}
	return nil
}

func (m *Hospitalization) GetSpecialArrangement() []*SpecialArrangement {
	if m != nil {
		return m.SpecialArrangement
	}
	return nil
}

func (m *Hospitalization) GetDietPreference() []*DietPreference {
	if m != nil {
		return m.DietPreference
	}
	return nil
}

func (m *Hospitalization) GetReAdmission() *ReAdmission {
	if m != nil {
		return m.ReAdmission
	}
	return nil
}

func (m *Hospitalization) GetDestination() *Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

type Destination struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Destination) Reset()                    { *m = Destination{} }
func (m *Destination) String() string            { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()               {}
func (*Destination) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *Destination) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type ReAdmission struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *ReAdmission) Reset()                    { *m = ReAdmission{} }
func (m *ReAdmission) String() string            { return proto.CompactTextString(m) }
func (*ReAdmission) ProtoMessage()               {}
func (*ReAdmission) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *ReAdmission) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type DietPreference struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *DietPreference) Reset()                    { *m = DietPreference{} }
func (m *DietPreference) String() string            { return proto.CompactTextString(m) }
func (*DietPreference) ProtoMessage()               {}
func (*DietPreference) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *DietPreference) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type SpecialArrangement struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *SpecialArrangement) Reset()                    { *m = SpecialArrangement{} }
func (m *SpecialArrangement) String() string            { return proto.CompactTextString(m) }
func (*SpecialArrangement) ProtoMessage()               {}
func (*SpecialArrangement) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *SpecialArrangement) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type SpecialCourtesy struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *SpecialCourtesy) Reset()                    { *m = SpecialCourtesy{} }
func (m *SpecialCourtesy) String() string            { return proto.CompactTextString(m) }
func (*SpecialCourtesy) ProtoMessage()               {}
func (*SpecialCourtesy) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *SpecialCourtesy) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type AdmitSource struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *AdmitSource) Reset()                    { *m = AdmitSource{} }
func (m *AdmitSource) String() string            { return proto.CompactTextString(m) }
func (*AdmitSource) ProtoMessage()               {}
func (*AdmitSource) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *AdmitSource) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Origin struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Origin) Reset()                    { *m = Origin{} }
func (m *Origin) String() string            { return proto.CompactTextString(m) }
func (*Origin) ProtoMessage()               {}
func (*Origin) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *Origin) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Participant struct {
	Individual *Individual `protobuf:"bytes,1,opt,name=individual" json:"individual,omitempty"`
	Type       []*Type     `protobuf:"bytes,2,rep,name=type" json:"type,omitempty"`
}

func (m *Participant) Reset()                    { *m = Participant{} }
func (m *Participant) String() string            { return proto.CompactTextString(m) }
func (*Participant) ProtoMessage()               {}
func (*Participant) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

func (m *Participant) GetIndividual() *Individual {
	if m != nil {
		return m.Individual
	}
	return nil
}

func (m *Participant) GetType() []*Type {
	if m != nil {
		return m.Type
	}
	return nil
}

type Individual struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Individual) Reset()                    { *m = Individual{} }
func (m *Individual) String() string            { return proto.CompactTextString(m) }
func (*Individual) ProtoMessage()               {}
func (*Individual) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

func (m *Individual) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type StatusHistory struct {
	Status string  `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Period *Period `protobuf:"bytes,2,opt,name=period" json:"period,omitempty"`
}

func (m *StatusHistory) Reset()                    { *m = StatusHistory{} }
func (m *StatusHistory) String() string            { return proto.CompactTextString(m) }
func (*StatusHistory) ProtoMessage()               {}
func (*StatusHistory) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{19} }

func (m *StatusHistory) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StatusHistory) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

type Account struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{20} }

func (m *Account) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func init() {
	proto.RegisterType((*Encounter)(nil), "buffer.Encounter")
	proto.RegisterType((*PartOf)(nil), "buffer.PartOf")
	proto.RegisterType((*EpisodeOfCare)(nil), "buffer.EpisodeOfCare")
	proto.RegisterType((*Appointment)(nil), "buffer.Appointment")
	proto.RegisterType((*ServiceProvider)(nil), "buffer.ServiceProvider")
	proto.RegisterType((*Diagnosis)(nil), "buffer.Diagnosis")
	proto.RegisterType((*Condition)(nil), "buffer.Condition")
	proto.RegisterType((*Class)(nil), "buffer.Class")
	proto.RegisterType((*IncomingReferral)(nil), "buffer.IncomingReferral")
	proto.RegisterType((*Hospitalization)(nil), "buffer.Hospitalization")
	proto.RegisterType((*Destination)(nil), "buffer.Destination")
	proto.RegisterType((*ReAdmission)(nil), "buffer.ReAdmission")
	proto.RegisterType((*DietPreference)(nil), "buffer.DietPreference")
	proto.RegisterType((*SpecialArrangement)(nil), "buffer.SpecialArrangement")
	proto.RegisterType((*SpecialCourtesy)(nil), "buffer.SpecialCourtesy")
	proto.RegisterType((*AdmitSource)(nil), "buffer.AdmitSource")
	proto.RegisterType((*Origin)(nil), "buffer.Origin")
	proto.RegisterType((*Participant)(nil), "buffer.Participant")
	proto.RegisterType((*Individual)(nil), "buffer.Individual")
	proto.RegisterType((*StatusHistory)(nil), "buffer.StatusHistory")
	proto.RegisterType((*Account)(nil), "buffer.Account")
}

func init() { proto.RegisterFile("encounter.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 903 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x6d, 0x6e, 0x1b, 0x37,
	0x10, 0x85, 0x24, 0x5b, 0x8a, 0x46, 0x96, 0xe4, 0x30, 0x4d, 0x4a, 0x04, 0xfd, 0x21, 0xa8, 0x80,
	0xeb, 0xf4, 0xc3, 0x29, 0x5c, 0x18, 0x68, 0xd1, 0xa2, 0x80, 0x21, 0x07, 0x48, 0x0b, 0x14, 0x36,
	0xc6, 0xb9, 0x00, 0xbd, 0x4b, 0xa9, 0x6c, 0x25, 0x72, 0x41, 0x52, 0x46, 0xd4, 0x3b, 0xf5, 0x38,
	0xbd, 0x4f, 0xc1, 0xd9, 0x2f, 0xee, 0x26, 0xb1, 0xfc, 0x6f, 0x77, 0xde, 0x7b, 0x24, 0x77, 0xe6,
	0xcd, 0x2c, 0x61, 0x2a, 0x75, 0x62, 0xb6, 0xda, 0x4b, 0x7b, 0x96, 0x59, 0xe3, 0x0d, 0xeb, 0xdf,
	0x6d, 0x97, 0x4b, 0x69, 0x5f, 0x1e, 0x25, 0x66, 0xb3, 0x31, 0x3a, 0x8f, 0xce, 0xff, 0x1b, 0xc0,
	0xf0, 0x4d, 0xc9, 0x64, 0x2f, 0xa0, 0xef, 0xbc, 0xf0, 0x5b, 0xc7, 0x3b, 0xb3, 0xce, 0xe9, 0x10,
	0x8b, 0x37, 0xf6, 0x0a, 0x06, 0x22, 0x21, 0x12, 0xef, 0xce, 0x7a, 0xa7, 0xa3, 0xf3, 0xe9, 0x59,
	0xbe, 0xda, 0xd9, 0x65, 0x1e, 0xc6, 0x12, 0x67, 0x3f, 0xc3, 0x38, 0x17, 0xbd, 0x55, 0xce, 0x1b,
	0xbb, 0xe3, 0x3d, 0x12, 0x3c, 0x2f, 0x05, 0xb7, 0x31, 0x88, 0x4d, 0x2e, 0xbb, 0x80, 0x51, 0x26,
	0xac, 0x57, 0x89, 0xca, 0x84, 0xf6, 0xfc, 0x80, 0xa4, 0xcf, 0x4a, 0xe9, 0x4d, 0x0d, 0x61, 0xcc,
	0x63, 0x97, 0x30, 0xfd, 0xd3, 0xb8, 0x4c, 0x79, 0xb1, 0x56, 0xff, 0x08, 0xaf, 0x8c, 0xe6, 0x87,
	0xb3, 0xce, 0xe9, 0xe8, 0xfc, 0xf3, 0x52, 0xfa, 0xb6, 0x09, 0x63, 0x9b, 0xcf, 0xe6, 0x70, 0x64,
	0xa5, 0x33, 0x5b, 0x9b, 0xc8, 0x77, 0xbb, 0x4c, 0xf2, 0x3e, 0x7d, 0x7f, 0x23, 0xc6, 0x66, 0x70,
	0xe0, 0xe5, 0x7b, 0xcf, 0x07, 0xb4, 0xf6, 0x51, 0xb9, 0xf6, 0x3b, 0xf9, 0xde, 0x23, 0x21, 0xec,
	0x0a, 0x8e, 0x95, 0x4e, 0xcc, 0x46, 0xe9, 0x15, 0xca, 0xa5, 0xb4, 0x56, 0xac, 0xf9, 0x13, 0xfa,
	0x08, 0x5e, 0xb2, 0x7f, 0x6b, 0xe1, 0xf8, 0x81, 0x82, 0x9d, 0x40, 0x3f, 0x93, 0x56, 0x99, 0x94,
	0x0f, 0x69, 0xa7, 0x49, 0x95, 0x00, 0x8a, 0x62, 0x81, 0xb2, 0x2f, 0xe1, 0x30, 0x59, 0x0b, 0xe7,
	0x38, 0x10, 0x6d, 0x5c, 0xd2, 0x16, 0x21, 0x88, 0x39, 0xc6, 0xbe, 0x85, 0x27, 0x99, 0x55, 0xc6,
	0x2a, 0xbf, 0xe3, 0x23, 0xe2, 0x1d, 0x57, 0xcb, 0x15, 0x71, 0xac, 0x18, 0x61, 0x6b, 0x2b, 0x85,
	0x33, 0x9a, 0x1f, 0xd1, 0xb1, 0xab, 0xad, 0x91, 0xa2, 0x58, 0xa0, 0xec, 0x35, 0x0c, 0x53, 0x25,
	0x56, 0xda, 0x38, 0xe5, 0xf8, 0x98, 0xa8, 0x4f, 0x4b, 0xea, 0x55, 0x09, 0x60, 0xcd, 0x09, 0x25,
	0x72, 0xd2, 0xde, 0xab, 0x44, 0xde, 0x58, 0x73, 0xaf, 0x52, 0x69, 0xf9, 0xa4, 0x59, 0xa2, 0xdb,
	0x26, 0x8c, 0x6d, 0x7e, 0x30, 0x87, 0xc8, 0x32, 0xa3, 0xb4, 0xdf, 0x48, 0xed, 0xf9, 0x94, 0xe4,
	0x95, 0x39, 0x2e, 0x6b, 0x08, 0x63, 0x5e, 0x30, 0xa4, 0xcc, 0x94, 0x33, 0xa9, 0xbc, 0x5e, 0x2e,
	0x84, 0x95, 0xfc, 0xb8, 0x69, 0xc8, 0x37, 0x31, 0x88, 0x4d, 0x2e, 0x3b, 0x07, 0x50, 0xa9, 0xd4,
	0x5e, 0x2d, 0x95, 0xb4, 0xfc, 0x29, 0x29, 0x59, 0x55, 0xca, 0x0a, 0xc1, 0x88, 0x45, 0x36, 0x09,
	0x16, 0x62, 0xc4, 0xae, 0x6d, 0xb2, 0xcb, 0x24, 0x12, 0xc2, 0x26, 0xd0, 0x55, 0x29, 0x7f, 0x46,
	0x16, 0xeb, 0xaa, 0x94, 0x0a, 0x2e, 0xac, 0xbf, 0x5e, 0xf2, 0xcf, 0x5a, 0x05, 0xa7, 0x28, 0x16,
	0x68, 0x68, 0x43, 0xb7, 0xbd, 0xfb, 0x4b, 0x26, 0x9e, 0x3f, 0x27, 0x62, 0xd5, 0x86, 0xb7, 0x79,
	0x18, 0x4b, 0x7c, 0x7e, 0x02, 0xfd, 0x5c, 0xcc, 0xbe, 0x80, 0xa1, 0x0d, 0xce, 0x92, 0x3a, 0x91,
	0x45, 0x5b, 0xd7, 0x81, 0xf9, 0x77, 0x30, 0x6e, 0x24, 0x60, 0x0f, 0xfd, 0x1b, 0x18, 0x45, 0x89,
	0xde, 0x43, 0x7e, 0x0d, 0xd3, 0x56, 0x51, 0xf7, 0x08, 0x2c, 0x0c, 0x2b, 0xf3, 0x84, 0x34, 0x5a,
	0xb3, 0xce, 0x59, 0x51, 0x1a, 0xd1, 0xac, 0x25, 0x12, 0x12, 0x4c, 0x98, 0x18, 0x9d, 0x2a, 0x6a,
	0xf8, 0x2e, 0xd1, 0x2a, 0x13, 0x2e, 0x4a, 0x00, 0x6b, 0x0e, 0x63, 0x70, 0x60, 0x85, 0xfe, 0x9b,
	0xf7, 0x66, 0x9d, 0xd3, 0x1e, 0xd2, 0xf3, 0xfc, 0x15, 0x0c, 0x2b, 0xee, 0x9e, 0xe3, 0xfd, 0x01,
	0x87, 0xd4, 0x5a, 0x61, 0x9d, 0xc4, 0xa4, 0x25, 0x83, 0x9e, 0x69, 0x74, 0xee, 0x9c, 0x97, 0x1b,
	0x3a, 0x49, 0x18, 0x9d, 0xf4, 0xc6, 0x38, 0x0c, 0x52, 0xe5, 0xb2, 0xb5, 0xd8, 0xd1, 0xb6, 0x43,
	0x2c, 0x5f, 0xe7, 0xdf, 0xc3, 0x71, 0x7b, 0x18, 0xec, 0x39, 0xc0, 0xbf, 0x3d, 0x98, 0xb6, 0x26,
	0x59, 0xf0, 0x8e, 0xb1, 0x6a, 0xa5, 0x74, 0x91, 0xa8, 0xca, 0x3b, 0xd7, 0x14, 0xc5, 0x02, 0xa5,
	0xee, 0x49, 0x37, 0xca, 0xdf, 0xd2, 0x3c, 0x2b, 0xd2, 0x55, 0x77, 0x4f, 0x0d, 0x61, 0xcc, 0xa3,
	0xbe, 0xcd, 0x64, 0xa2, 0xc4, 0x7a, 0x61, 0xb6, 0xd6, 0x4b, 0x57, 0x0e, 0xf4, 0xba, 0x6f, 0x9b,
	0x30, 0xb6, 0xf9, 0xec, 0x77, 0x60, 0x45, 0xe8, 0xd2, 0x5a, 0xa1, 0x57, 0x92, 0xda, 0x37, 0x9f,
	0xed, 0x2f, 0x5b, 0xab, 0x44, 0x0c, 0xfc, 0x88, 0x8a, 0xfd, 0x0a, 0x93, 0x54, 0x49, 0x7f, 0x53,
	0x27, 0xe9, 0x90, 0xd6, 0x79, 0x51, 0x0f, 0x9f, 0x18, 0xc5, 0x16, 0x3b, 0x64, 0xc1, 0xca, 0xf0,
	0xb1, 0xce, 0x05, 0xd3, 0xf4, 0x9b, 0x59, 0xc0, 0x1a, 0xc2, 0x98, 0x17, 0x64, 0xa9, 0x74, 0x5e,
	0xe9, 0xfc, 0xe7, 0x32, 0x68, 0xca, 0xae, 0x6a, 0x08, 0x63, 0x5e, 0xe8, 0x96, 0x08, 0xdb, 0x53,
	0xdc, 0x0b, 0x18, 0x45, 0xfb, 0x87, 0xba, 0x26, 0x26, 0x55, 0x7a, 0xc5, 0x3b, 0xcd, 0x49, 0xbc,
	0xa0, 0x28, 0x16, 0xe8, 0xfc, 0x47, 0x98, 0x34, 0xbf, 0xf9, 0xd1, 0xca, 0x5f, 0x80, 0x7d, 0x98,
	0xf5, 0x47, 0xab, 0x7f, 0x82, 0x69, 0xab, 0xf2, 0x8f, 0x96, 0x5e, 0xc0, 0x28, 0xf2, 0xdb, 0xa3,
	0x65, 0x27, 0xd0, 0xcf, 0x3d, 0xbd, 0x27, 0x91, 0x09, 0x8c, 0xa2, 0x9b, 0x02, 0x8d, 0x70, 0x9d,
	0xaa, 0x7b, 0x95, 0x6e, 0xc5, 0xba, 0x68, 0x92, 0x7a, 0x84, 0x57, 0x08, 0x46, 0xac, 0x6a, 0x84,
	0x77, 0x3f, 0x35, 0xc2, 0xe7, 0x5f, 0x03, 0xd4, 0xda, 0x3d, 0x07, 0xba, 0x86, 0x71, 0xe3, 0xd6,
	0xf3, 0xc9, 0x6b, 0x56, 0xfd, 0xe3, 0xef, 0x3e, 0xf4, 0xe3, 0x9f, 0x7f, 0x05, 0x83, 0xe2, 0xde,
	0xf5, 0xf0, 0xce, 0x77, 0x7d, 0xba, 0xe4, 0xfd, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd1,
	0xbd, 0x60, 0xbf, 0x0d, 0x0a, 0x00, 0x00,
}
