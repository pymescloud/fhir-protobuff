// Code generated by protoc-gen-go. DO NOT EDIT.
// source: observation.proto

package buffer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Observation struct {
	Status            string         `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Category          []*Category    `protobuf:"bytes,2,rep,name=category" json:"category,omitempty"`
	Code              *Code          `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	ResourceType      string         `protobuf:"bytes,4,opt,name=resourceType" json:"resourceType,omitempty"`
	Component         []*Component   `protobuf:"bytes,5,rep,name=component" json:"component,omitempty"`
	Meta              *Meta          `protobuf:"bytes,6,opt,name=meta" json:"meta,omitempty"`
	EffectiveDateTime string         `protobuf:"bytes,7,opt,name=effectiveDateTime" json:"effectiveDateTime,omitempty"`
	Id                string         `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	Context           *Context       `protobuf:"bytes,9,opt,name=context" json:"context,omitempty"`
	Subject           *Subject       `protobuf:"bytes,10,opt,name=subject" json:"subject,omitempty"`
	Issued            string         `protobuf:"bytes,11,opt,name=issued" json:"issued,omitempty"`
	ValueQuantity     *ValueQuantity `protobuf:"bytes,12,opt,name=valueQuantity" json:"valueQuantity,omitempty"`
}

func (m *Observation) Reset()                    { *m = Observation{} }
func (m *Observation) String() string            { return proto.CompactTextString(m) }
func (*Observation) ProtoMessage()               {}
func (*Observation) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *Observation) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Observation) GetCategory() []*Category {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Observation) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Observation) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *Observation) GetComponent() []*Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Observation) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Observation) GetEffectiveDateTime() string {
	if m != nil {
		return m.EffectiveDateTime
	}
	return ""
}

func (m *Observation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Observation) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Observation) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Observation) GetIssued() string {
	if m != nil {
		return m.Issued
	}
	return ""
}

func (m *Observation) GetValueQuantity() *ValueQuantity {
	if m != nil {
		return m.ValueQuantity
	}
	return nil
}

type Component struct {
	ValueQuantity *ValueQuantity `protobuf:"bytes,1,opt,name=valueQuantity" json:"valueQuantity,omitempty"`
	Code          *Code          `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *Component) Reset()                    { *m = Component{} }
func (m *Component) String() string            { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()               {}
func (*Component) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *Component) GetValueQuantity() *ValueQuantity {
	if m != nil {
		return m.ValueQuantity
	}
	return nil
}

func (m *Component) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

type ValueQuantity struct {
	Code   string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Unit   string `protobuf:"bytes,2,opt,name=unit" json:"unit,omitempty"`
	Value  int64  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	System string `protobuf:"bytes,4,opt,name=system" json:"system,omitempty"`
}

func (m *ValueQuantity) Reset()                    { *m = ValueQuantity{} }
func (m *ValueQuantity) String() string            { return proto.CompactTextString(m) }
func (*ValueQuantity) ProtoMessage()               {}
func (*ValueQuantity) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *ValueQuantity) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ValueQuantity) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *ValueQuantity) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ValueQuantity) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func init() {
	proto.RegisterType((*Observation)(nil), "buffer.Observation")
	proto.RegisterType((*Component)(nil), "buffer.Component")
	proto.RegisterType((*ValueQuantity)(nil), "buffer.ValueQuantity")
}

func init() { proto.RegisterFile("observation.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0xab, 0xd4, 0x40,
	0x10, 0x24, 0xc9, 0xbe, 0xbc, 0x97, 0x4e, 0x9e, 0xba, 0x83, 0xca, 0xe0, 0x29, 0xe4, 0xb4, 0xc2,
	0x63, 0x85, 0xf5, 0xe8, 0x51, 0xaf, 0x22, 0x8e, 0x8b, 0xf7, 0xc9, 0xa4, 0x23, 0xb3, 0x98, 0xcc,
	0x92, 0xe9, 0x59, 0xcc, 0x0f, 0xf5, 0xff, 0xc8, 0x4e, 0xbe, 0x0c, 0x8b, 0xe0, 0x2d, 0x5d, 0x55,
	0xa9, 0x1a, 0xba, 0x0b, 0xb6, 0xa6, 0xb4, 0xd8, 0x5d, 0x24, 0x69, 0xd3, 0xee, 0xcf, 0x9d, 0x21,
	0xc3, 0xe2, 0xd2, 0xd5, 0x35, 0x76, 0x6f, 0x32, 0x65, 0x9a, 0x66, 0x42, 0x8b, 0xdf, 0x11, 0xa4,
	0x5f, 0x16, 0x2d, 0x7b, 0x0d, 0xb1, 0x25, 0x49, 0xce, 0xf2, 0x20, 0x0f, 0x76, 0x89, 0x18, 0x27,
	0xf6, 0x04, 0x0f, 0x4a, 0x12, 0xfe, 0x30, 0x5d, 0xcf, 0xc3, 0x3c, 0xda, 0xa5, 0x87, 0x17, 0xfb,
	0xc1, 0x70, 0xff, 0x71, 0xc4, 0xc5, 0xac, 0x60, 0x39, 0x6c, 0x94, 0xa9, 0x90, 0x47, 0x79, 0xb0,
	0x4b, 0x0f, 0xd9, 0xac, 0x34, 0x15, 0x0a, 0xcf, 0xb0, 0x02, 0xb2, 0x0e, 0xad, 0x71, 0x9d, 0xc2,
	0x63, 0x7f, 0x46, 0xbe, 0xf1, 0x69, 0x2b, 0x8c, 0xbd, 0x83, 0x44, 0x99, 0xe6, 0x6c, 0x5a, 0x6c,
	0x89, 0xdf, 0xf9, 0xd0, 0xed, 0x62, 0x35, 0x12, 0x62, 0xd1, 0x5c, 0x63, 0x1b, 0x24, 0xc9, 0xe3,
	0x75, 0xec, 0x67, 0x24, 0x29, 0x3c, 0xc3, 0x9e, 0x60, 0x8b, 0x75, 0x8d, 0x8a, 0xf4, 0x05, 0x3f,
	0x49, 0xc2, 0xa3, 0x6e, 0x90, 0xdf, 0xfb, 0xec, 0x5b, 0x82, 0x3d, 0x83, 0x50, 0x57, 0xfc, 0xc1,
	0xd3, 0xa1, 0xae, 0xd8, 0x5b, 0xb8, 0x57, 0xa6, 0x25, 0xfc, 0x45, 0x3c, 0xf1, 0x11, 0xcf, 0x97,
	0xe7, 0x78, 0x58, 0x4c, 0xfc, 0x55, 0x6a, 0x5d, 0x79, 0x42, 0x45, 0x1c, 0xd6, 0xd2, 0x6f, 0x03,
	0x2c, 0x26, 0xfe, 0xba, 0x72, 0x6d, 0xad, 0xc3, 0x8a, 0xa7, 0xc3, 0xca, 0x87, 0x89, 0x7d, 0x80,
	0xc7, 0x8b, 0xfc, 0xe9, 0xf0, 0xab, 0x93, 0x2d, 0x69, 0xea, 0x79, 0xe6, 0x8d, 0x5e, 0x4d, 0x46,
	0xdf, 0xff, 0x26, 0xc5, 0x5a, 0x5b, 0x9c, 0x20, 0x99, 0x57, 0x74, 0xeb, 0x14, 0xfc, 0xbf, 0xd3,
	0x7c, 0xcb, 0xf0, 0x5f, 0xb7, 0x2c, 0x10, 0x1e, 0x57, 0x0e, 0x8c, 0x8d, 0xbf, 0x0c, 0x15, 0x1a,
	0x0e, 0xce, 0x60, 0xe3, 0x5a, 0x4d, 0xde, 0x26, 0x11, 0xfe, 0x9b, 0xbd, 0x84, 0x3b, 0x9f, 0xe5,
	0x7b, 0x12, 0x89, 0x61, 0xf0, 0x15, 0xec, 0x2d, 0x61, 0x33, 0x96, 0x62, 0x9c, 0xca, 0xd8, 0x37,
	0xf6, 0xfd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0x64, 0x55, 0x4d, 0xdc, 0x02, 0x00, 0x00,
}
