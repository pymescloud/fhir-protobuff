// Code generated by protoc-gen-go.
// source: observation.proto
// DO NOT EDIT!

package buffer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Observation struct {
	Status            string       `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Category          []*Category  `protobuf:"bytes,2,rep,name=category" json:"category,omitempty"`
	Code              *Code        `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	ResourceType      string       `protobuf:"bytes,4,opt,name=resourceType" json:"resourceType,omitempty"`
	Component         []*Component `protobuf:"bytes,5,rep,name=component" json:"component,omitempty"`
	Meta              *Meta        `protobuf:"bytes,6,opt,name=meta" json:"meta,omitempty"`
	EffectiveDateTime string       `protobuf:"bytes,7,opt,name=effectiveDateTime" json:"effectiveDateTime,omitempty"`
	Id                string       `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	Encounter         *OEncounter  `protobuf:"bytes,9,opt,name=encounter" json:"encounter,omitempty"`
	Subject           *Subject     `protobuf:"bytes,10,opt,name=subject" json:"subject,omitempty"`
}

func (m *Observation) Reset()                    { *m = Observation{} }
func (m *Observation) String() string            { return proto.CompactTextString(m) }
func (*Observation) ProtoMessage()               {}
func (*Observation) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *Observation) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Observation) GetCategory() []*Category {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Observation) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Observation) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *Observation) GetComponent() []*Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Observation) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Observation) GetEffectiveDateTime() string {
	if m != nil {
		return m.EffectiveDateTime
	}
	return ""
}

func (m *Observation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Observation) GetEncounter() *OEncounter {
	if m != nil {
		return m.Encounter
	}
	return nil
}

func (m *Observation) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

type OEncounter struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *OEncounter) Reset()                    { *m = OEncounter{} }
func (m *OEncounter) String() string            { return proto.CompactTextString(m) }
func (*OEncounter) ProtoMessage()               {}
func (*OEncounter) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *OEncounter) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Component struct {
	ValueQuantity *ValueQuantity `protobuf:"bytes,1,opt,name=valueQuantity" json:"valueQuantity,omitempty"`
	Code          *Code          `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *Component) Reset()                    { *m = Component{} }
func (m *Component) String() string            { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()               {}
func (*Component) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *Component) GetValueQuantity() *ValueQuantity {
	if m != nil {
		return m.ValueQuantity
	}
	return nil
}

func (m *Component) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

type ValueQuantity struct {
	Code   string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Unit   string `protobuf:"bytes,2,opt,name=unit" json:"unit,omitempty"`
	Value  int64  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	System string `protobuf:"bytes,4,opt,name=system" json:"system,omitempty"`
}

func (m *ValueQuantity) Reset()                    { *m = ValueQuantity{} }
func (m *ValueQuantity) String() string            { return proto.CompactTextString(m) }
func (*ValueQuantity) ProtoMessage()               {}
func (*ValueQuantity) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *ValueQuantity) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ValueQuantity) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *ValueQuantity) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ValueQuantity) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func init() {
	proto.RegisterType((*Observation)(nil), "buffer.Observation")
	proto.RegisterType((*OEncounter)(nil), "buffer.OEncounter")
	proto.RegisterType((*Component)(nil), "buffer.Component")
	proto.RegisterType((*ValueQuantity)(nil), "buffer.ValueQuantity")
}

func init() { proto.RegisterFile("observation.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x8b, 0xd4, 0x40,
	0x10, 0xc5, 0x99, 0xc9, 0x6c, 0x76, 0x53, 0x99, 0x55, 0xa7, 0x50, 0x69, 0xc4, 0x43, 0xc8, 0x69,
	0x94, 0x65, 0x94, 0xf1, 0xe8, 0x51, 0x3d, 0xca, 0x62, 0xbb, 0x78, 0xef, 0x74, 0x2a, 0x92, 0xc1,
	0x74, 0x0f, 0x9d, 0xea, 0x81, 0x7c, 0x02, 0xbf, 0xb6, 0xd8, 0xf9, 0x67, 0x90, 0xbd, 0xa5, 0xea,
	0xbd, 0xbc, 0x5f, 0xc8, 0x2b, 0xd8, 0xd9, 0xa2, 0x25, 0x77, 0x51, 0x5c, 0x5b, 0x73, 0x38, 0x3b,
	0xcb, 0x16, 0xe3, 0xc2, 0x57, 0x15, 0xb9, 0x57, 0x5b, 0x6d, 0x9b, 0x66, 0xdc, 0xe6, 0xbf, 0x23,
	0x48, 0xef, 0x67, 0x2f, 0xbe, 0x84, 0xb8, 0x65, 0xc5, 0xbe, 0x15, 0xab, 0x6c, 0xb5, 0x4f, 0xe4,
	0x30, 0xe1, 0x1d, 0xdc, 0x68, 0xc5, 0xf4, 0xd3, 0xba, 0x4e, 0xac, 0xb3, 0x68, 0x9f, 0x1e, 0x9f,
	0x1d, 0xfa, 0xc0, 0xc3, 0xa7, 0x61, 0x2f, 0x27, 0x07, 0x66, 0xb0, 0xd1, 0xb6, 0x24, 0x11, 0x65,
	0xab, 0x7d, 0x7a, 0xdc, 0x4e, 0x4e, 0x5b, 0x92, 0x0c, 0x0a, 0xe6, 0xb0, 0x75, 0xd4, 0x5a, 0xef,
	0x34, 0x3d, 0x74, 0x67, 0x12, 0x9b, 0x40, 0x5b, 0xec, 0xf0, 0x1d, 0x24, 0xda, 0x36, 0x67, 0x6b,
	0xc8, 0xb0, 0xb8, 0x0a, 0xd0, 0xdd, 0x1c, 0x35, 0x08, 0x72, 0xf6, 0xfc, 0xc5, 0x36, 0xc4, 0x4a,
	0xc4, 0x4b, 0xec, 0x57, 0x62, 0x25, 0x83, 0x82, 0x77, 0xb0, 0xa3, 0xaa, 0x22, 0xcd, 0xf5, 0x85,
	0x3e, 0x2b, 0xa6, 0x87, 0xba, 0x21, 0x71, 0x1d, 0xd8, 0xff, 0x0b, 0xf8, 0x04, 0xd6, 0x75, 0x29,
	0x6e, 0x82, 0xbc, 0xae, 0x4b, 0x7c, 0x0f, 0x09, 0x19, 0x6d, 0xbd, 0x61, 0x72, 0x22, 0x09, 0x10,
	0x1c, 0x21, 0xf7, 0x5f, 0x46, 0x45, 0xce, 0x26, 0x7c, 0x03, 0xd7, 0xad, 0x2f, 0x4e, 0xa4, 0x59,
	0x40, 0xf0, 0x3f, 0x1d, 0xfd, 0xdf, 0xfb, 0xb5, 0x1c, 0xf5, 0xfc, 0x2d, 0xc0, 0x9c, 0x81, 0xaf,
	0x21, 0x71, 0x54, 0x91, 0x23, 0xa3, 0x69, 0xa8, 0x62, 0x5e, 0xe4, 0x27, 0x48, 0xa6, 0x1f, 0x80,
	0x1f, 0xe1, 0xf6, 0xa2, 0x7e, 0x79, 0xfa, 0xe6, 0x95, 0xe1, 0x9a, 0xbb, 0x60, 0x4f, 0x8f, 0x2f,
	0x46, 0xd2, 0x8f, 0x7f, 0x45, 0xb9, 0xf4, 0x4e, 0x4d, 0xad, 0x1f, 0x6b, 0x2a, 0x27, 0xb8, 0x5d,
	0x24, 0x20, 0x0e, 0xaf, 0xf4, 0x5f, 0xd5, 0xd7, 0x89, 0xb0, 0xf1, 0xa6, 0xe6, 0x10, 0x93, 0xc8,
	0xf0, 0x8c, 0xcf, 0xe1, 0x2a, 0xb0, 0xc2, 0x15, 0x44, 0xb2, 0x1f, 0xc2, 0x81, 0x75, 0x2d, 0x53,
	0x33, 0x54, 0x3e, 0x4c, 0x45, 0x1c, 0xee, 0xf1, 0xc3, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xed,
	0xc9, 0x69, 0x57, 0xba, 0x02, 0x00, 0x00,
}
