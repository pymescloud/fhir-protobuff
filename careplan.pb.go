// Code generated by protoc-gen-go. DO NOT EDIT.
// source: careplan.proto

package buffer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CarePlan struct {
	Status       string        `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Addresses    []*Addresses  `protobuf:"bytes,2,rep,name=addresses" json:"addresses,omitempty"`
	ResourceType string        `protobuf:"bytes,3,opt,name=resourceType" json:"resourceType,omitempty"`
	Text         *Text         `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
	Goal         []*CGoal      `protobuf:"bytes,5,rep,name=goal" json:"goal,omitempty"`
	Period       *Period       `protobuf:"bytes,6,opt,name=period" json:"period,omitempty"`
	Contained    []*CContained `protobuf:"bytes,7,rep,name=contained" json:"contained,omitempty"`
	Intent       string        `protobuf:"bytes,8,opt,name=intent" json:"intent,omitempty"`
	Activity     []*Activity   `protobuf:"bytes,9,rep,name=activity" json:"activity,omitempty"`
	CareTeam     []*CareTeam   `protobuf:"bytes,10,rep,name=careTeam" json:"careTeam,omitempty"`
	Id           string        `protobuf:"bytes,11,opt,name=id" json:"id,omitempty"`
	Subject      *Subject      `protobuf:"bytes,12,opt,name=subject" json:"subject,omitempty"`
	Meta         *Meta         `protobuf:"bytes,13,opt,name=meta" json:"meta,omitempty"`
}

func (m *CarePlan) Reset()                    { *m = CarePlan{} }
func (m *CarePlan) String() string            { return proto.CompactTextString(m) }
func (*CarePlan) ProtoMessage()               {}
func (*CarePlan) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *CarePlan) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CarePlan) GetAddresses() []*Addresses {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *CarePlan) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *CarePlan) GetText() *Text {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *CarePlan) GetGoal() []*CGoal {
	if m != nil {
		return m.Goal
	}
	return nil
}

func (m *CarePlan) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *CarePlan) GetContained() []*CContained {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *CarePlan) GetIntent() string {
	if m != nil {
		return m.Intent
	}
	return ""
}

func (m *CarePlan) GetActivity() []*Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *CarePlan) GetCareTeam() []*CareTeam {
	if m != nil {
		return m.CareTeam
	}
	return nil
}

func (m *CarePlan) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CarePlan) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *CarePlan) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type CareTeam struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *CareTeam) Reset()                    { *m = CareTeam{} }
func (m *CareTeam) String() string            { return proto.CompactTextString(m) }
func (*CareTeam) ProtoMessage()               {}
func (*CareTeam) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *CareTeam) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Activity struct {
	Detail *Detail `protobuf:"bytes,1,opt,name=detail" json:"detail,omitempty"`
}

func (m *Activity) Reset()                    { *m = Activity{} }
func (m *Activity) String() string            { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()               {}
func (*Activity) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Activity) GetDetail() *Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

type Detail struct {
	Category         *Category         `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	Status           string            `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Code             *Code             `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	ProductReference *ProductReference `protobuf:"bytes,4,opt,name=productReference" json:"productReference,omitempty"`
	ScheduledString  string            `protobuf:"bytes,5,opt,name=scheduledString" json:"scheduledString,omitempty"`
	Prohibited       bool              `protobuf:"varint,6,opt,name=prohibited" json:"prohibited,omitempty"`
	DailyAmount      *DailyAmount      `protobuf:"bytes,7,opt,name=dailyAmount" json:"dailyAmount,omitempty"`
}

func (m *Detail) Reset()                    { *m = Detail{} }
func (m *Detail) String() string            { return proto.CompactTextString(m) }
func (*Detail) ProtoMessage()               {}
func (*Detail) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Detail) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Detail) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Detail) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Detail) GetProductReference() *ProductReference {
	if m != nil {
		return m.ProductReference
	}
	return nil
}

func (m *Detail) GetScheduledString() string {
	if m != nil {
		return m.ScheduledString
	}
	return ""
}

func (m *Detail) GetProhibited() bool {
	if m != nil {
		return m.Prohibited
	}
	return false
}

func (m *Detail) GetDailyAmount() *DailyAmount {
	if m != nil {
		return m.DailyAmount
	}
	return nil
}

type DailyAmount struct {
	Code   string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Value  int64  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Unit   string `protobuf:"bytes,3,opt,name=unit" json:"unit,omitempty"`
	System string `protobuf:"bytes,4,opt,name=system" json:"system,omitempty"`
}

func (m *DailyAmount) Reset()                    { *m = DailyAmount{} }
func (m *DailyAmount) String() string            { return proto.CompactTextString(m) }
func (*DailyAmount) ProtoMessage()               {}
func (*DailyAmount) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *DailyAmount) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DailyAmount) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *DailyAmount) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *DailyAmount) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

type ProductReference struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *ProductReference) Reset()                    { *m = ProductReference{} }
func (m *ProductReference) String() string            { return proto.CompactTextString(m) }
func (*ProductReference) ProtoMessage()               {}
func (*ProductReference) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ProductReference) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *ProductReference) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type CContained struct {
	ResourceType string          `protobuf:"bytes,1,opt,name=resourceType" json:"resourceType,omitempty"`
	Participant  []*CParticipant `protobuf:"bytes,2,rep,name=participant" json:"participant,omitempty"`
	Id           string          `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *CContained) Reset()                    { *m = CContained{} }
func (m *CContained) String() string            { return proto.CompactTextString(m) }
func (*CContained) ProtoMessage()               {}
func (*CContained) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *CContained) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *CContained) GetParticipant() []*CParticipant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *CContained) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CParticipant struct {
	Member *Member `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
	Role   *Role   `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
}

func (m *CParticipant) Reset()                    { *m = CParticipant{} }
func (m *CParticipant) String() string            { return proto.CompactTextString(m) }
func (*CParticipant) ProtoMessage()               {}
func (*CParticipant) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *CParticipant) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *CParticipant) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type Member struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Member) Reset()                    { *m = Member{} }
func (m *Member) String() string            { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()               {}
func (*Member) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *Member) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Member) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type CGoal struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *CGoal) Reset()                    { *m = CGoal{} }
func (m *CGoal) String() string            { return proto.CompactTextString(m) }
func (*CGoal) ProtoMessage()               {}
func (*CGoal) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *CGoal) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func init() {
	proto.RegisterType((*CarePlan)(nil), "buffer.CarePlan")
	proto.RegisterType((*CareTeam)(nil), "buffer.CareTeam")
	proto.RegisterType((*Activity)(nil), "buffer.Activity")
	proto.RegisterType((*Detail)(nil), "buffer.Detail")
	proto.RegisterType((*DailyAmount)(nil), "buffer.DailyAmount")
	proto.RegisterType((*ProductReference)(nil), "buffer.ProductReference")
	proto.RegisterType((*CContained)(nil), "buffer.CContained")
	proto.RegisterType((*CParticipant)(nil), "buffer.CParticipant")
	proto.RegisterType((*Member)(nil), "buffer.Member")
	proto.RegisterType((*CGoal)(nil), "buffer.CGoal")
}

func init() { proto.RegisterFile("careplan.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 638 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x5f, 0x6b, 0xdb, 0x3e,
	0x14, 0x25, 0xff, 0x9c, 0xe4, 0x26, 0xfd, 0xf3, 0xd3, 0xaf, 0x0c, 0x31, 0xc6, 0xc8, 0x0c, 0x1b,
	0x19, 0x8c, 0x6e, 0x74, 0x6c, 0xcf, 0x2b, 0x29, 0x0c, 0x06, 0x85, 0xa2, 0xf6, 0x61, 0xaf, 0x8a,
	0x75, 0xdb, 0x6a, 0xd8, 0x96, 0x91, 0xe5, 0xd2, 0x7c, 0xb2, 0x7d, 0xa4, 0x7d, 0x8d, 0xe1, 0x2b,
	0xd9, 0x71, 0xd2, 0xb1, 0x87, 0xbd, 0x59, 0xe7, 0x1c, 0x5d, 0xf9, 0x1e, 0x9d, 0x2b, 0x38, 0x4c,
	0xa4, 0xc5, 0x22, 0x95, 0xf9, 0x69, 0x61, 0x8d, 0x33, 0x2c, 0x5a, 0x57, 0xb7, 0xb7, 0x68, 0x9f,
	0xcf, 0x13, 0x93, 0x65, 0x26, 0xa0, 0xf1, 0xaf, 0x01, 0x4c, 0x56, 0xd2, 0xe2, 0x55, 0x2a, 0x73,
	0xf6, 0x0c, 0xa2, 0xd2, 0x49, 0x57, 0x95, 0xbc, 0xb7, 0xe8, 0x2d, 0xa7, 0x22, 0xac, 0xd8, 0x7b,
	0x98, 0x4a, 0xa5, 0x2c, 0x96, 0x25, 0x96, 0xbc, 0xbf, 0x18, 0x2c, 0x67, 0x67, 0xff, 0x9d, 0xfa,
	0x72, 0xa7, 0xe7, 0x0d, 0x21, 0xb6, 0x1a, 0x16, 0xc3, 0xdc, 0x62, 0x69, 0x2a, 0x9b, 0xe0, 0xcd,
	0xa6, 0x40, 0x3e, 0xa0, 0x72, 0x3b, 0x18, 0x5b, 0xc0, 0xd0, 0xe1, 0xa3, 0xe3, 0xc3, 0x45, 0x6f,
	0x39, 0x3b, 0x9b, 0x37, 0xf5, 0x6e, 0xf0, 0xd1, 0x09, 0x62, 0xd8, 0x2b, 0x18, 0xde, 0x19, 0x99,
	0xf2, 0x11, 0x9d, 0x78, 0xd0, 0x28, 0x56, 0x5f, 0x8d, 0x4c, 0x05, 0x51, 0xec, 0x0d, 0x44, 0x05,
	0x5a, 0x6d, 0x14, 0x8f, 0xa8, 0xcc, 0x61, 0x23, 0xba, 0x22, 0x54, 0x04, 0x96, 0x7d, 0x80, 0x69,
	0x62, 0x72, 0x27, 0x75, 0x8e, 0x8a, 0x8f, 0xa9, 0x1e, 0x6b, 0xeb, 0xad, 0x1a, 0x46, 0x6c, 0x45,
	0xb5, 0x17, 0x3a, 0x77, 0x98, 0x3b, 0x3e, 0xf1, 0x5e, 0xf8, 0x15, 0x7b, 0x07, 0x13, 0x99, 0x38,
	0xfd, 0xa0, 0xdd, 0x86, 0x4f, 0xa9, 0xd0, 0x71, 0x6b, 0x45, 0xc0, 0x45, 0xab, 0xa8, 0xd5, 0xf5,
	0x35, 0xdc, 0xa0, 0xcc, 0x38, 0xec, 0xaa, 0x57, 0x01, 0x17, 0xad, 0x82, 0x1d, 0x42, 0x5f, 0x2b,
	0x3e, 0xa3, 0xf3, 0xfa, 0x5a, 0xb1, 0xb7, 0x30, 0x2e, 0xab, 0xf5, 0x0f, 0x4c, 0x1c, 0x9f, 0x53,
	0x7b, 0x47, 0xcd, 0xe6, 0x6b, 0x0f, 0x8b, 0x86, 0xaf, 0xdd, 0xcc, 0xd0, 0x49, 0x7e, 0xb0, 0xeb,
	0xe6, 0x25, 0x3a, 0x29, 0x88, 0x89, 0x97, 0xfe, 0xa2, 0xe9, 0xa0, 0x17, 0x30, 0xb5, 0x78, 0x8b,
	0x16, 0xf3, 0x04, 0xc3, 0x5d, 0x6f, 0x81, 0xf8, 0x0c, 0x26, 0x4d, 0x2b, 0xb5, 0xc1, 0x0a, 0x9d,
	0xd4, 0x29, 0xc9, 0x3a, 0x06, 0x5f, 0x10, 0x2a, 0x02, 0x1b, 0xff, 0xec, 0x43, 0xe4, 0x21, 0xdf,
	0xb3, 0xc3, 0x3b, 0x63, 0x37, 0x61, 0x53, 0xa7, 0x67, 0x8f, 0x8b, 0x56, 0xd1, 0xc9, 0x5c, 0x7f,
	0x27, 0x73, 0x0b, 0x18, 0x26, 0x46, 0xf9, 0xe8, 0x74, 0x1a, 0x5a, 0x19, 0x85, 0x82, 0x18, 0x76,
	0x01, 0xc7, 0x85, 0x35, 0xaa, 0x4a, 0x9c, 0x68, 0x7b, 0xf1, 0x61, 0xe2, 0x6d, 0x0a, 0xf6, 0x78,
	0xf1, 0x64, 0x07, 0x5b, 0xc2, 0x51, 0x99, 0xdc, 0xa3, 0xaa, 0x52, 0x54, 0xd7, 0xce, 0xea, 0xfc,
	0x8e, 0x8f, 0xe8, 0x47, 0xf6, 0x61, 0xf6, 0x12, 0xa0, 0xb0, 0xe6, 0x5e, 0xaf, 0xb5, 0x43, 0x9f,
	0xb7, 0x89, 0xe8, 0x20, 0xec, 0x13, 0xcc, 0x94, 0xd4, 0xe9, 0xe6, 0x3c, 0x33, 0x55, 0xee, 0xf8,
	0x98, 0x7e, 0xe5, 0xff, 0xd6, 0xaf, 0x2d, 0x25, 0xba, 0xba, 0x38, 0x81, 0x59, 0x87, 0x63, 0x2c,
	0xf4, 0xed, 0x6f, 0xc5, 0x77, 0x7a, 0x02, 0xa3, 0x07, 0x99, 0x56, 0x48, 0x16, 0x0d, 0x84, 0x5f,
	0xd4, 0xca, 0x2a, 0xd7, 0x2e, 0x0c, 0x17, 0x7d, 0x93, 0x9b, 0x9b, 0xd2, 0x61, 0x46, 0x4e, 0xd4,
	0x6e, 0xd2, 0x2a, 0xfe, 0x06, 0xc7, 0xfb, 0x5e, 0x30, 0x0e, 0x63, 0xa5, 0xcb, 0x22, 0x95, 0x9b,
	0x70, 0x58, 0xb3, 0xdc, 0x8d, 0x47, 0x7f, 0x3f, 0x1e, 0x8f, 0x00, 0xdb, 0x91, 0x79, 0x32, 0xea,
	0xbd, 0x3f, 0x8c, 0xfa, 0x67, 0x98, 0x15, 0xd2, 0x3a, 0x9d, 0xe8, 0x42, 0xe6, 0x2e, 0xbc, 0x20,
	0x27, 0xed, 0x95, 0x5e, 0x6d, 0x39, 0xd1, 0x15, 0x86, 0x79, 0x18, 0x34, 0xf3, 0x10, 0x7f, 0x87,
	0x79, 0x57, 0x5c, 0x87, 0x33, 0xc3, 0x6c, 0x8d, 0x76, 0x3f, 0x9c, 0x97, 0x84, 0x8a, 0xc0, 0xd6,
	0x59, 0xb2, 0x26, 0xf5, 0xad, 0x74, 0xb2, 0x24, 0x4c, 0x8a, 0x82, 0x98, 0xf8, 0x0b, 0x44, 0x7e,
	0xcf, 0x3f, 0xbb, 0xf2, 0x1a, 0x46, 0xf4, 0x30, 0xfd, 0x7d, 0xb6, 0xd6, 0x11, 0x3d, 0xbb, 0x1f,
	0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xec, 0x97, 0xd7, 0xb0, 0x9e, 0x05, 0x00, 0x00,
}
