// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package buffer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Meta struct {
	VersionId   string `protobuf:"bytes,1,opt,name=versionId" json:"versionId,omitempty"`
	LastUpdated string `protobuf:"bytes,2,opt,name=lastUpdated" json:"lastUpdated,omitempty"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Meta) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *Meta) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

type Qualification struct {
	Code       *Code         `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Period     *Period       `protobuf:"bytes,2,opt,name=period" json:"period,omitempty"`
	Identifier []*Identifier `protobuf:"bytes,3,rep,name=identifier" json:"identifier,omitempty"`
	Issuer     *Issuer       `protobuf:"bytes,4,opt,name=issuer" json:"issuer,omitempty"`
}

func (m *Qualification) Reset()                    { *m = Qualification{} }
func (m *Qualification) String() string            { return proto.CompactTextString(m) }
func (*Qualification) ProtoMessage()               {}
func (*Qualification) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *Qualification) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Qualification) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Qualification) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Qualification) GetIssuer() *Issuer {
	if m != nil {
		return m.Issuer
	}
	return nil
}

type Subject struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Subject) Reset()                    { *m = Subject{} }
func (m *Subject) String() string            { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()               {}
func (*Subject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *Subject) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Subject) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Stage struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *Stage) Reset()                    { *m = Stage{} }
func (m *Stage) String() string            { return proto.CompactTextString(m) }
func (*Stage) ProtoMessage()               {}
func (*Stage) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *Stage) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Type struct {
	Text   string    `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Coding []*Coding `protobuf:"bytes,2,rep,name=coding" json:"coding,omitempty"`
}

func (m *Type) Reset()                    { *m = Type{} }
func (m *Type) String() string            { return proto.CompactTextString(m) }
func (*Type) ProtoMessage()               {}
func (*Type) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *Type) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Type) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Patient struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Patient) Reset()                    { *m = Patient{} }
func (m *Patient) String() string            { return proto.CompactTextString(m) }
func (*Patient) ProtoMessage()               {}
func (*Patient) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *Patient) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Patient) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type EncounterRef struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *EncounterRef) Reset()                    { *m = EncounterRef{} }
func (m *EncounterRef) String() string            { return proto.CompactTextString(m) }
func (*EncounterRef) ProtoMessage()               {}
func (*EncounterRef) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *EncounterRef) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Requester struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Requester) Reset()                    { *m = Requester{} }
func (m *Requester) String() string            { return proto.CompactTextString(m) }
func (*Requester) ProtoMessage()               {}
func (*Requester) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *Requester) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Requester) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Performer struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Performer) Reset()                    { *m = Performer{} }
func (m *Performer) String() string            { return proto.CompactTextString(m) }
func (*Performer) ProtoMessage()               {}
func (*Performer) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *Performer) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Performer) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Context struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Context) Reset()                    { *m = Context{} }
func (m *Context) String() string            { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()               {}
func (*Context) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *Context) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Context) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Category struct {
	Text   string    `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Coding []*Coding `protobuf:"bytes,2,rep,name=coding" json:"coding,omitempty"`
}

func (m *Category) Reset()                    { *m = Category{} }
func (m *Category) String() string            { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()               {}
func (*Category) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *Category) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Category) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Issuer struct {
	Display string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
}

func (m *Issuer) Reset()                    { *m = Issuer{} }
func (m *Issuer) String() string            { return proto.CompactTextString(m) }
func (*Issuer) ProtoMessage()               {}
func (*Issuer) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *Issuer) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

type Code struct {
	Text   string    `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Coding []*Coding `protobuf:"bytes,2,rep,name=coding" json:"coding,omitempty"`
}

func (m *Code) Reset()                    { *m = Code{} }
func (m *Code) String() string            { return proto.CompactTextString(m) }
func (*Code) ProtoMessage()               {}
func (*Code) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *Code) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Code) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type PractitionerRole struct {
	Organization      *Organization        `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
	Location          []*Location          `protobuf:"bytes,2,rep,name=location" json:"location,omitempty"`
	Role              *Role                `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
	Period            *Period              `protobuf:"bytes,4,opt,name=period" json:"period,omitempty"`
	HealthcareService []*HealthcareService `protobuf:"bytes,5,rep,name=healthcareService" json:"healthcareService,omitempty"`
}

func (m *PractitionerRole) Reset()                    { *m = PractitionerRole{} }
func (m *PractitionerRole) String() string            { return proto.CompactTextString(m) }
func (*PractitionerRole) ProtoMessage()               {}
func (*PractitionerRole) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

func (m *PractitionerRole) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *PractitionerRole) GetLocation() []*Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *PractitionerRole) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *PractitionerRole) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *PractitionerRole) GetHealthcareService() []*HealthcareService {
	if m != nil {
		return m.HealthcareService
	}
	return nil
}

type HealthcareService struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *HealthcareService) Reset()                    { *m = HealthcareService{} }
func (m *HealthcareService) String() string            { return proto.CompactTextString(m) }
func (*HealthcareService) ProtoMessage()               {}
func (*HealthcareService) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *HealthcareService) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Period struct {
	Start string `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (m *Period) Reset()                    { *m = Period{} }
func (m *Period) String() string            { return proto.CompactTextString(m) }
func (*Period) ProtoMessage()               {}
func (*Period) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *Period) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Period) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type Role struct {
	Text         string    `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Coding       []*Coding `protobuf:"bytes,2,rep,name=coding" json:"coding,omitempty"`
	FhirComments []string  `protobuf:"bytes,3,rep,name=fhir_comments,json=fhirComments" json:"fhir_comments,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{16} }

func (m *Role) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Role) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

func (m *Role) GetFhirComments() []string {
	if m != nil {
		return m.FhirComments
	}
	return nil
}

type Location struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{17} }

func (m *Location) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Location) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Organization struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Organization) Reset()                    { *m = Organization{} }
func (m *Organization) String() string            { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()               {}
func (*Organization) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{18} }

func (m *Organization) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Name struct {
	Use    string   `protobuf:"bytes,1,opt,name=use" json:"use,omitempty"`
	Given  []string `protobuf:"bytes,2,rep,name=given" json:"given,omitempty"`
	Family string   `protobuf:"bytes,3,opt,name=family" json:"family,omitempty"`
	Suffix []string `protobuf:"bytes,4,rep,name=suffix" json:"suffix,omitempty"`
}

func (m *Name) Reset()                    { *m = Name{} }
func (m *Name) String() string            { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()               {}
func (*Name) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{19} }

func (m *Name) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *Name) GetGiven() []string {
	if m != nil {
		return m.Given
	}
	return nil
}

func (m *Name) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *Name) GetSuffix() []string {
	if m != nil {
		return m.Suffix
	}
	return nil
}

type Identifier struct {
	Use      string    `protobuf:"bytes,1,opt,name=use" json:"use,omitempty"`
	Assigner *Assigner `protobuf:"bytes,2,opt,name=assigner" json:"assigner,omitempty"`
	System   string    `protobuf:"bytes,3,opt,name=system" json:"system,omitempty"`
	Value    string    `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	Period   *Period   `protobuf:"bytes,5,opt,name=period" json:"period,omitempty"`
	Type     *Type     `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
}

func (m *Identifier) Reset()                    { *m = Identifier{} }
func (m *Identifier) String() string            { return proto.CompactTextString(m) }
func (*Identifier) ProtoMessage()               {}
func (*Identifier) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{20} }

func (m *Identifier) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *Identifier) GetAssigner() *Assigner {
	if m != nil {
		return m.Assigner
	}
	return nil
}

func (m *Identifier) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *Identifier) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Identifier) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Identifier) GetType() *Type {
	if m != nil {
		return m.Type
	}
	return nil
}

type Assigner struct {
	Display string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
}

func (m *Assigner) Reset()                    { *m = Assigner{} }
func (m *Assigner) String() string            { return proto.CompactTextString(m) }
func (*Assigner) ProtoMessage()               {}
func (*Assigner) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{21} }

func (m *Assigner) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

type Contact struct {
	Name         *Name           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Relationship []*Relationship `protobuf:"bytes,2,rep,name=relationship" json:"relationship,omitempty"`
	Telecom      []*Telecom      `protobuf:"bytes,3,rep,name=telecom" json:"telecom,omitempty"`
	Gender       string          `protobuf:"bytes,4,opt,name=gender" json:"gender,omitempty"`
	Period       *Period         `protobuf:"bytes,5,opt,name=period" json:"period,omitempty"`
	Address      *Address        `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{22} }

func (m *Contact) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Contact) GetRelationship() []*Relationship {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *Contact) GetTelecom() []*Telecom {
	if m != nil {
		return m.Telecom
	}
	return nil
}

func (m *Contact) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Contact) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Contact) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type Address struct {
	City       string   `protobuf:"bytes,1,opt,name=city" json:"city,omitempty"`
	Use        string   `protobuf:"bytes,2,opt,name=use" json:"use,omitempty"`
	District   string   `protobuf:"bytes,3,opt,name=district" json:"district,omitempty"`
	Period     *Period  `protobuf:"bytes,4,opt,name=period" json:"period,omitempty"`
	State      string   `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	PostalCode string   `protobuf:"bytes,6,opt,name=postalCode" json:"postalCode,omitempty"`
	Line       []string `protobuf:"bytes,7,rep,name=line" json:"line,omitempty"`
	Type       string   `protobuf:"bytes,8,opt,name=type" json:"type,omitempty"`
	Country    string   `protobuf:"bytes,9,opt,name=country" json:"country,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{23} }

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *Address) GetDistrict() string {
	if m != nil {
		return m.District
	}
	return ""
}

func (m *Address) GetPeriod() *Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Address) GetLine() []string {
	if m != nil {
		return m.Line
	}
	return nil
}

func (m *Address) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type Relationship struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *Relationship) Reset()                    { *m = Relationship{} }
func (m *Relationship) String() string            { return proto.CompactTextString(m) }
func (*Relationship) ProtoMessage()               {}
func (*Relationship) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{24} }

func (m *Relationship) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Extension struct {
	Url       string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	ValueCode string `protobuf:"bytes,2,opt,name=valueCode" json:"valueCode,omitempty"`
}

func (m *Extension) Reset()                    { *m = Extension{} }
func (m *Extension) String() string            { return proto.CompactTextString(m) }
func (*Extension) ProtoMessage()               {}
func (*Extension) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{25} }

func (m *Extension) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Extension) GetValueCode() string {
	if m != nil {
		return m.ValueCode
	}
	return ""
}

type Telecom struct {
	Use    string `protobuf:"bytes,1,opt,name=use" json:"use,omitempty"`
	System string `protobuf:"bytes,2,opt,name=system" json:"system,omitempty"`
	Value  string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *Telecom) Reset()                    { *m = Telecom{} }
func (m *Telecom) String() string            { return proto.CompactTextString(m) }
func (*Telecom) ProtoMessage()               {}
func (*Telecom) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{26} }

func (m *Telecom) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *Telecom) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *Telecom) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Communication struct {
	Language  *Language `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Preferred bool      `protobuf:"varint,2,opt,name=preferred" json:"preferred,omitempty"`
}

func (m *Communication) Reset()                    { *m = Communication{} }
func (m *Communication) String() string            { return proto.CompactTextString(m) }
func (*Communication) ProtoMessage()               {}
func (*Communication) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{27} }

func (m *Communication) GetLanguage() *Language {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *Communication) GetPreferred() bool {
	if m != nil {
		return m.Preferred
	}
	return false
}

type Language struct {
	Text   string    `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Coding []*Coding `protobuf:"bytes,2,rep,name=coding" json:"coding,omitempty"`
}

func (m *Language) Reset()                    { *m = Language{} }
func (m *Language) String() string            { return proto.CompactTextString(m) }
func (*Language) ProtoMessage()               {}
func (*Language) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{28} }

func (m *Language) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Language) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Coding struct {
	Code    string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	System  string `protobuf:"bytes,2,opt,name=system" json:"system,omitempty"`
	Display string `protobuf:"bytes,3,opt,name=display" json:"display,omitempty"`
}

func (m *Coding) Reset()                    { *m = Coding{} }
func (m *Coding) String() string            { return proto.CompactTextString(m) }
func (*Coding) ProtoMessage()               {}
func (*Coding) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{29} }

func (m *Coding) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Coding) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *Coding) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

type Text struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Div    string `protobuf:"bytes,2,opt,name=div" json:"div,omitempty"`
}

func (m *Text) Reset()                    { *m = Text{} }
func (m *Text) String() string            { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()               {}
func (*Text) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{30} }

func (m *Text) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Text) GetDiv() string {
	if m != nil {
		return m.Div
	}
	return ""
}

type ManagingOrganization struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *ManagingOrganization) Reset()                    { *m = ManagingOrganization{} }
func (m *ManagingOrganization) String() string            { return proto.CompactTextString(m) }
func (*ManagingOrganization) ProtoMessage()               {}
func (*ManagingOrganization) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{31} }

func (m *ManagingOrganization) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *ManagingOrganization) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Summary struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *Summary) Reset()                    { *m = Summary{} }
func (m *Summary) String() string            { return proto.CompactTextString(m) }
func (*Summary) ProtoMessage()               {}
func (*Summary) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{32} }

func (m *Summary) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Asserter struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Asserter) Reset()                    { *m = Asserter{} }
func (m *Asserter) String() string            { return proto.CompactTextString(m) }
func (*Asserter) ProtoMessage()               {}
func (*Asserter) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{33} }

func (m *Asserter) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Asserter) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type BodySite struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *BodySite) Reset()                    { *m = BodySite{} }
func (m *BodySite) String() string            { return proto.CompactTextString(m) }
func (*BodySite) ProtoMessage()               {}
func (*BodySite) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{34} }

func (m *BodySite) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Severity struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *Severity) Reset()                    { *m = Severity{} }
func (m *Severity) String() string            { return proto.CompactTextString(m) }
func (*Severity) ProtoMessage()               {}
func (*Severity) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{35} }

func (m *Severity) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Evidence struct {
	Code []*Code `protobuf:"bytes,1,rep,name=code" json:"code,omitempty"`
}

func (m *Evidence) Reset()                    { *m = Evidence{} }
func (m *Evidence) String() string            { return proto.CompactTextString(m) }
func (*Evidence) ProtoMessage()               {}
func (*Evidence) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{36} }

func (m *Evidence) GetCode() []*Code {
	if m != nil {
		return m.Code
	}
	return nil
}

type Link struct {
	Url      string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Relation string `protobuf:"bytes,2,opt,name=relation" json:"relation,omitempty"`
}

func (m *Link) Reset()                    { *m = Link{} }
func (m *Link) String() string            { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()               {}
func (*Link) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{37} }

func (m *Link) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Link) GetRelation() string {
	if m != nil {
		return m.Relation
	}
	return ""
}

type Reason struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *Reason) Reset()                    { *m = Reason{} }
func (m *Reason) String() string            { return proto.CompactTextString(m) }
func (*Reason) ProtoMessage()               {}
func (*Reason) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{38} }

func (m *Reason) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type BasedOn struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *BasedOn) Reset()                    { *m = BasedOn{} }
func (m *BasedOn) String() string            { return proto.CompactTextString(m) }
func (*BasedOn) ProtoMessage()               {}
func (*BasedOn) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{39} }

func (m *BasedOn) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Note struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (m *Note) Reset()                    { *m = Note{} }
func (m *Note) String() string            { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()               {}
func (*Note) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{40} }

func (m *Note) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// encounter containd
type Contained struct {
	ResourceType string `protobuf:"bytes,1,opt,name=resourceType" json:"resourceType,omitempty"`
	Code         *Code  `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Id           string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *Contained) Reset()                    { *m = Contained{} }
func (m *Contained) String() string            { return proto.CompactTextString(m) }
func (*Contained) ProtoMessage()               {}
func (*Contained) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{41} }

func (m *Contained) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *Contained) GetCode() *Code {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Contained) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Actor struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Actor) Reset()                    { *m = Actor{} }
func (m *Actor) String() string            { return proto.CompactTextString(m) }
func (*Actor) ProtoMessage()               {}
func (*Actor) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{42} }

func (m *Actor) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Actor) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Priority struct {
	Text   string    `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Coding []*Coding `protobuf:"bytes,2,rep,name=coding" json:"coding,omitempty"`
}

func (m *Priority) Reset()                    { *m = Priority{} }
func (m *Priority) String() string            { return proto.CompactTextString(m) }
func (*Priority) ProtoMessage()               {}
func (*Priority) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{43} }

func (m *Priority) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Priority) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Addresses struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Addresses) Reset()                    { *m = Addresses{} }
func (m *Addresses) String() string            { return proto.CompactTextString(m) }
func (*Addresses) ProtoMessage()               {}
func (*Addresses) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{44} }

func (m *Addresses) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Addresses) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func init() {
	proto.RegisterType((*Meta)(nil), "buffer.Meta")
	proto.RegisterType((*Qualification)(nil), "buffer.Qualification")
	proto.RegisterType((*Subject)(nil), "buffer.Subject")
	proto.RegisterType((*Stage)(nil), "buffer.Stage")
	proto.RegisterType((*Type)(nil), "buffer.Type")
	proto.RegisterType((*Patient)(nil), "buffer.Patient")
	proto.RegisterType((*EncounterRef)(nil), "buffer.EncounterRef")
	proto.RegisterType((*Requester)(nil), "buffer.Requester")
	proto.RegisterType((*Performer)(nil), "buffer.Performer")
	proto.RegisterType((*Context)(nil), "buffer.Context")
	proto.RegisterType((*Category)(nil), "buffer.Category")
	proto.RegisterType((*Issuer)(nil), "buffer.Issuer")
	proto.RegisterType((*Code)(nil), "buffer.Code")
	proto.RegisterType((*PractitionerRole)(nil), "buffer.PractitionerRole")
	proto.RegisterType((*HealthcareService)(nil), "buffer.HealthcareService")
	proto.RegisterType((*Period)(nil), "buffer.Period")
	proto.RegisterType((*Role)(nil), "buffer.Role")
	proto.RegisterType((*Location)(nil), "buffer.Location")
	proto.RegisterType((*Organization)(nil), "buffer.Organization")
	proto.RegisterType((*Name)(nil), "buffer.Name")
	proto.RegisterType((*Identifier)(nil), "buffer.Identifier")
	proto.RegisterType((*Assigner)(nil), "buffer.Assigner")
	proto.RegisterType((*Contact)(nil), "buffer.Contact")
	proto.RegisterType((*Address)(nil), "buffer.Address")
	proto.RegisterType((*Relationship)(nil), "buffer.Relationship")
	proto.RegisterType((*Extension)(nil), "buffer.Extension")
	proto.RegisterType((*Telecom)(nil), "buffer.Telecom")
	proto.RegisterType((*Communication)(nil), "buffer.Communication")
	proto.RegisterType((*Language)(nil), "buffer.Language")
	proto.RegisterType((*Coding)(nil), "buffer.Coding")
	proto.RegisterType((*Text)(nil), "buffer.Text")
	proto.RegisterType((*ManagingOrganization)(nil), "buffer.ManagingOrganization")
	proto.RegisterType((*Summary)(nil), "buffer.Summary")
	proto.RegisterType((*Asserter)(nil), "buffer.Asserter")
	proto.RegisterType((*BodySite)(nil), "buffer.BodySite")
	proto.RegisterType((*Severity)(nil), "buffer.Severity")
	proto.RegisterType((*Evidence)(nil), "buffer.Evidence")
	proto.RegisterType((*Link)(nil), "buffer.Link")
	proto.RegisterType((*Reason)(nil), "buffer.Reason")
	proto.RegisterType((*BasedOn)(nil), "buffer.BasedOn")
	proto.RegisterType((*Note)(nil), "buffer.Note")
	proto.RegisterType((*Contained)(nil), "buffer.Contained")
	proto.RegisterType((*Actor)(nil), "buffer.Actor")
	proto.RegisterType((*Priority)(nil), "buffer.Priority")
	proto.RegisterType((*Addresses)(nil), "buffer.Addresses")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 1164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xef, 0x6e, 0xe3, 0x44,
	0x10, 0x57, 0x12, 0x37, 0xb1, 0xa7, 0x69, 0xe9, 0x59, 0x15, 0x32, 0x15, 0x42, 0x95, 0x41, 0x70,
	0x27, 0x55, 0xe5, 0x2e, 0x20, 0x84, 0xc4, 0x07, 0x94, 0x46, 0x3d, 0xa8, 0x74, 0xd7, 0x2b, 0xdb,
	0xe3, 0x13, 0x12, 0x68, 0x6b, 0x4f, 0xdc, 0x05, 0x67, 0x37, 0xec, 0xae, 0xa3, 0x86, 0x77, 0xe0,
	0x71, 0x78, 0x03, 0xde, 0x86, 0x47, 0xe0, 0x0b, 0xda, 0xf5, 0xda, 0x71, 0xae, 0x69, 0x1b, 0x9a,
	0x6f, 0x9e, 0x3f, 0x3b, 0x3b, 0x3b, 0x33, 0xbf, 0x99, 0x31, 0xf4, 0x13, 0x31, 0x99, 0x08, 0x7e,
	0x3c, 0x95, 0x42, 0x8b, 0xb0, 0x7b, 0x55, 0x8c, 0xc7, 0x28, 0xe3, 0x97, 0xe0, 0xbd, 0x46, 0x4d,
	0xc3, 0x0f, 0x21, 0x98, 0xa1, 0x54, 0x4c, 0xf0, 0xb3, 0x34, 0x6a, 0x1d, 0xb6, 0x9e, 0x06, 0x64,
	0xc1, 0x08, 0x0f, 0x61, 0x3b, 0xa7, 0x4a, 0xff, 0x38, 0x4d, 0xa9, 0xc6, 0x34, 0x6a, 0x5b, 0x79,
	0x93, 0x15, 0xff, 0xd5, 0x82, 0x9d, 0x1f, 0x0a, 0x9a, 0xb3, 0x31, 0x4b, 0xa8, 0x66, 0x82, 0x87,
	0x87, 0xe0, 0x25, 0x22, 0x45, 0x6b, 0x6c, 0x7b, 0xd0, 0x3f, 0x2e, 0x2f, 0x3c, 0x1e, 0x89, 0x14,
	0x89, 0x95, 0x84, 0x9f, 0x42, 0x77, 0x8a, 0x92, 0x89, 0xd2, 0xe0, 0xf6, 0x60, 0xb7, 0xd2, 0xb9,
	0xb0, 0x5c, 0xe2, 0xa4, 0xe1, 0x00, 0x80, 0xa5, 0xc8, 0x35, 0x1b, 0x33, 0x94, 0x51, 0xe7, 0xb0,
	0xf3, 0x74, 0x7b, 0x10, 0x56, 0xba, 0x67, 0xb5, 0x84, 0x34, 0xb4, 0x8c, 0x6d, 0xa6, 0x54, 0x81,
	0x32, 0xf2, 0x96, 0x6d, 0x9f, 0x59, 0x2e, 0x71, 0xd2, 0x78, 0x08, 0xbd, 0xcb, 0xe2, 0xea, 0x57,
	0x4c, 0x74, 0x18, 0x41, 0x2f, 0x65, 0x6a, 0x9a, 0xd3, 0xb9, 0x0b, 0x40, 0x45, 0x9a, 0xe0, 0x48,
	0x1c, 0xa3, 0x44, 0x9e, 0xa0, 0x7b, 0xfc, 0x82, 0x11, 0x7f, 0x0e, 0x5b, 0x97, 0x9a, 0x66, 0xf6,
	0x3d, 0x89, 0x48, 0x19, 0xcf, 0xa2, 0x96, 0xf5, 0x71, 0xb7, 0xf1, 0x66, 0xc6, 0x33, 0xe2, 0xa4,
	0xf1, 0x09, 0x78, 0x6f, 0xe7, 0x53, 0x0c, 0x43, 0xf0, 0x34, 0xde, 0x68, 0x77, 0x9b, 0xfd, 0x6e,
	0xd8, 0x68, 0xdf, 0x6b, 0x63, 0x08, 0xbd, 0x0b, 0xaa, 0x19, 0xf2, 0xc7, 0xfb, 0x7d, 0x04, 0xfd,
	0x53, 0x9e, 0x88, 0x82, 0x6b, 0x94, 0x04, 0xc7, 0xcb, 0xda, 0xad, 0x77, 0xb5, 0x47, 0x10, 0x10,
	0xfc, 0xbd, 0x40, 0xa5, 0x51, 0x3e, 0xfa, 0xca, 0x11, 0x04, 0x17, 0x28, 0xc7, 0x42, 0x4e, 0x36,
	0x30, 0x32, 0x84, 0xde, 0x48, 0x70, 0x1b, 0xad, 0xc7, 0x9a, 0x78, 0x09, 0xfe, 0x88, 0x6a, 0xcc,
	0x84, 0x9c, 0x6f, 0x94, 0x85, 0x18, 0xba, 0x65, 0x3d, 0xdd, 0xed, 0x89, 0xc9, 0xb6, 0xa9, 0xf9,
	0x8d, 0xee, 0xf9, 0xb3, 0x0d, 0x7b, 0x17, 0x92, 0x26, 0x9a, 0x19, 0x68, 0xa1, 0x24, 0x22, 0xc7,
	0xf0, 0x6b, 0xe8, 0x0b, 0x99, 0x51, 0xce, 0xfe, 0xb0, 0x80, 0x73, 0x40, 0xdb, 0xaf, 0x4c, 0xbc,
	0x69, 0xc8, 0xc8, 0x92, 0x66, 0x78, 0x04, 0x7e, 0x2e, 0x4a, 0x98, 0xba, 0x8b, 0xf7, 0xaa, 0x53,
	0xaf, 0x1c, 0x9f, 0xd4, 0x1a, 0x06, 0xc8, 0x52, 0xe4, 0x18, 0x75, 0x96, 0x81, 0x6c, 0x7c, 0x20,
	0x56, 0xd2, 0x00, 0xb2, 0x77, 0x2f, 0x90, 0xbf, 0x83, 0x27, 0xd7, 0x48, 0x73, 0x7d, 0x9d, 0x50,
	0x89, 0x97, 0x28, 0x67, 0x2c, 0xc1, 0x68, 0xcb, 0x3a, 0xf0, 0x41, 0x75, 0xe4, 0xfb, 0x77, 0x15,
	0xc8, 0xed, 0x33, 0xf1, 0x0b, 0x78, 0x72, 0x4b, 0xef, 0x81, 0xfa, 0x7d, 0x0e, 0xdd, 0xd2, 0x9b,
	0x70, 0x1f, 0xb6, 0x94, 0xa6, 0xb2, 0xca, 0x44, 0x49, 0x84, 0x7b, 0xd0, 0x41, 0x5e, 0xb5, 0x36,
	0xf3, 0x19, 0x67, 0xe0, 0xd9, 0x38, 0x6f, 0x90, 0xb8, 0xf0, 0x63, 0xd8, 0x19, 0x5f, 0x33, 0xf9,
	0x8b, 0xe9, 0xbd, 0xc8, 0xb5, 0xb2, 0xdd, 0x2b, 0x20, 0x7d, 0xc3, 0x1c, 0x39, 0x5e, 0x7c, 0x02,
	0x7e, 0x15, 0xf6, 0x4d, 0xc0, 0xdc, 0x4c, 0xf8, 0x03, 0xc1, 0xf8, 0x19, 0xbc, 0x73, 0x3a, 0x41,
	0xf3, 0xe8, 0x42, 0x55, 0x72, 0xf3, 0x69, 0x82, 0x93, 0xb1, 0x19, 0x96, 0x75, 0x11, 0x90, 0x92,
	0x08, 0xdf, 0x87, 0xee, 0x98, 0x4e, 0x58, 0x3e, 0xb7, 0x45, 0x10, 0x10, 0x47, 0x19, 0xbe, 0x2a,
	0xc6, 0x63, 0x76, 0x13, 0x79, 0x56, 0xdd, 0x51, 0xf1, 0xdf, 0x2d, 0x80, 0x45, 0x63, 0x5e, 0x71,
	0xcd, 0x11, 0xf8, 0x54, 0x29, 0x96, 0x71, 0x94, 0xae, 0xf9, 0xd7, 0x15, 0x38, 0x74, 0x7c, 0x52,
	0x6b, 0xd8, 0x6b, 0xe6, 0x4a, 0xe3, 0xa4, 0xba, 0xbe, 0xa4, 0x8c, 0xb3, 0x33, 0x9a, 0x17, 0x68,
	0xcb, 0x2e, 0x20, 0x25, 0xd1, 0xa8, 0xc6, 0xad, 0x7b, 0xab, 0xf1, 0x10, 0x3c, 0x3d, 0x9f, 0x62,
	0xd4, 0x5d, 0xae, 0x6b, 0xd3, 0x9a, 0x89, 0x95, 0xc4, 0x9f, 0x80, 0x5f, 0x79, 0x73, 0x0f, 0xc0,
	0xff, 0x6d, 0x95, 0x0d, 0x89, 0x26, 0xda, 0xd8, 0xe4, 0x74, 0x72, 0x6b, 0xe8, 0x99, 0x60, 0x13,
	0x2b, 0x31, 0xa8, 0x95, 0x98, 0xdb, 0x24, 0xa9, 0x6b, 0x36, 0x75, 0xf5, 0x53, 0xa3, 0x96, 0x34,
	0x64, 0x64, 0x49, 0x33, 0x7c, 0x06, 0x3d, 0x8d, 0x39, 0x26, 0x62, 0xe2, 0x66, 0xe0, 0x7b, 0xb5,
	0xcb, 0x25, 0x9b, 0x54, 0x72, 0x13, 0xb0, 0x0c, 0x79, 0xea, 0xa6, 0x5f, 0x40, 0x1c, 0xb5, 0x76,
	0x68, 0x9e, 0x41, 0x8f, 0xa6, 0xa9, 0x44, 0xa5, 0x5c, 0x74, 0xea, 0xab, 0x86, 0x25, 0x9b, 0x54,
	0xf2, 0xf8, 0x9f, 0x16, 0xf4, 0x1c, 0xd3, 0x20, 0x25, 0x61, 0xba, 0x0a, 0x90, 0xfd, 0xae, 0x72,
	0xdf, 0x5e, 0xe4, 0xfe, 0x00, 0xfc, 0x94, 0x29, 0x2d, 0x59, 0xa2, 0x5d, 0x3e, 0x6b, 0x7a, 0xed,
	0x4e, 0x52, 0x62, 0x58, 0xa3, 0x7d, 0x47, 0x89, 0x61, 0x8d, 0xe1, 0x47, 0x00, 0x53, 0xa1, 0x34,
	0xcd, 0x4d, 0xc3, 0xb5, 0x9e, 0x07, 0xa4, 0xc1, 0x31, 0xfe, 0xe5, 0x8c, 0x63, 0xd4, 0xb3, 0xc5,
	0x6a, 0xbf, 0x2d, 0xba, 0x4d, 0x15, 0xf8, 0x0e, 0xdd, 0x66, 0x30, 0x47, 0xd0, 0xb3, 0x73, 0x51,
	0xce, 0xa3, 0xa0, 0xcc, 0xb5, 0x23, 0xe3, 0xaf, 0xa0, 0xdf, 0xcc, 0xd0, 0xda, 0x23, 0xff, 0x1b,
	0x08, 0x4e, 0x6f, 0x34, 0x72, 0xb3, 0x4f, 0xd9, 0x90, 0xc8, 0xbc, 0x86, 0x83, 0xcc, 0xed, 0xf6,
	0x65, 0x6a, 0xd7, 0xfa, 0xed, 0xb0, 0x5d, 0x33, 0xe2, 0x33, 0xe8, 0xb9, 0x0c, 0xaf, 0x40, 0xd2,
	0x02, 0x1b, 0xed, 0xd5, 0xd8, 0xe8, 0x34, 0xb0, 0x11, 0xff, 0x04, 0x3b, 0xa6, 0xed, 0x14, 0xbc,
	0xda, 0xd2, 0xcc, 0x28, 0xa0, 0x3c, 0x2b, 0x68, 0x56, 0x15, 0xed, 0x62, 0x14, 0x38, 0x3e, 0xa9,
	0x35, 0x8c, 0x9f, 0x53, 0xdb, 0x45, 0xa4, 0xdb, 0x02, 0x7d, 0xb2, 0x60, 0x98, 0xa9, 0x5a, 0x9d,
	0xd9, 0x68, 0xda, 0x9d, 0x43, 0xb7, 0xe4, 0xd8, 0x82, 0xaa, 0x76, 0xc8, 0xc0, 0x6d, 0x8d, 0x77,
	0x3d, 0xb8, 0x01, 0xd0, 0xce, 0x32, 0x40, 0x9f, 0x83, 0xf7, 0xd6, 0xdc, 0x6f, 0x4e, 0x6a, 0xaa,
	0x0b, 0xe5, 0xec, 0x39, 0xca, 0x04, 0x35, 0x65, 0xb3, 0xaa, 0x44, 0x53, 0x36, 0x8b, 0xcf, 0x61,
	0xff, 0x35, 0xe5, 0x34, 0x63, 0x3c, 0x5b, 0xea, 0xaa, 0x8f, 0xed, 0xce, 0x2f, 0xcc, 0x96, 0x39,
	0x99, 0x50, 0x39, 0xff, 0x1f, 0x4b, 0xa2, 0xe9, 0x3d, 0x28, 0x37, 0x59, 0xb7, 0x06, 0xe0, 0x9f,
	0x88, 0x74, 0x7e, 0xc9, 0xf4, 0xfa, 0xcb, 0xe9, 0x00, 0xfc, 0x4b, 0x9c, 0xa1, 0x34, 0xd8, 0x5d,
	0xf7, 0xcc, 0x11, 0xf8, 0xa7, 0x33, 0xb3, 0x7c, 0x27, 0xd8, 0x58, 0xfb, 0x3b, 0xab, 0xd7, 0xfe,
	0xf8, 0x4b, 0xf0, 0x5e, 0x31, 0xfe, 0xdb, 0x0a, 0x18, 0x1c, 0x80, 0x5f, 0x75, 0x3c, 0xf7, 0x98,
	0x9a, 0x36, 0xf3, 0x9b, 0x20, 0x55, 0x82, 0xaf, 0xed, 0xd5, 0x67, 0xd0, 0x3b, 0xa1, 0x0a, 0xd3,
	0x37, 0x0f, 0x4d, 0xc3, 0x03, 0xf0, 0xce, 0x85, 0x5e, 0x59, 0xb3, 0x31, 0x85, 0xc0, 0xf6, 0x76,
	0xc6, 0x31, 0x0d, 0x63, 0xd3, 0xbb, 0x95, 0x28, 0x64, 0x82, 0x66, 0x4a, 0x38, 0xc5, 0x25, 0x5e,
	0xfd, 0xfe, 0xf6, 0x9d, 0xbf, 0x3d, 0xbb, 0xd0, 0x66, 0xa9, 0xab, 0xd1, 0x36, 0x4b, 0xe3, 0x6f,
	0x61, 0x6b, 0x98, 0x68, 0x21, 0x37, 0xd9, 0x66, 0x2f, 0x24, 0x13, 0x36, 0x65, 0x9b, 0xe0, 0x6e,
	0x04, 0x81, 0xeb, 0xe4, 0xa8, 0x1e, 0xeb, 0xcc, 0x55, 0xd7, 0xfe, 0x5f, 0x7e, 0xf1, 0x5f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x37, 0xd5, 0xaa, 0x32, 0x6f, 0x0e, 0x00, 0x00,
}
