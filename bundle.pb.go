// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bundle.proto

package buffer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Bundle struct {
	ResourceType string   `protobuf:"bytes,1,opt,name=resourceType" json:"resourceType,omitempty"`
	Link         []*Link  `protobuf:"bytes,2,rep,name=link" json:"link,omitempty"`
	Total        int64    `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Type         string   `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	Entry        []*Entry `protobuf:"bytes,5,rep,name=entry" json:"entry,omitempty"`
}

func (m *Bundle) Reset()                    { *m = Bundle{} }
func (m *Bundle) String() string            { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()               {}
func (*Bundle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Bundle) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *Bundle) GetLink() []*Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Bundle) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Bundle) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Bundle) GetEntry() []*Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type Entry struct {
	FullUrl  string `protobuf:"bytes,1,opt,name=fullUrl" json:"fullUrl,omitempty"`
	Resource string `protobuf:"bytes,2,opt,name=resource" json:"resource,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Entry) GetFullUrl() string {
	if m != nil {
		return m.FullUrl
	}
	return ""
}

func (m *Entry) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

type OneOfResource struct {
	// Types that are valid to be assigned to Resource:
	//	*OneOfResource_Patient
	//	*OneOfResource_Provider
	//	*OneOfResource_AllergyIntolerance
	//	*OneOfResource_Encounter
	//	*OneOfResource_Condition
	//	*OneOfResource_Precedure
	//	*OneOfResource_MedicationRequest
	//	*OneOfResource_Observation
	//	*OneOfResource_DiagnosticReport
	//	*OneOfResource_Immunication
	//	*OneOfResource_Careplan
	//	*OneOfResource_Goal
	//	*OneOfResource_Organization
	Resource isOneOfResource_Resource `protobuf_oneof:"resource"`
}

func (m *OneOfResource) Reset()                    { *m = OneOfResource{} }
func (m *OneOfResource) String() string            { return proto.CompactTextString(m) }
func (*OneOfResource) ProtoMessage()               {}
func (*OneOfResource) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type isOneOfResource_Resource interface {
	isOneOfResource_Resource()
}

type OneOfResource_Patient struct {
	Patient *PatientData `protobuf:"bytes,1,opt,name=patient,oneof"`
}
type OneOfResource_Provider struct {
	Provider *PractitionerData `protobuf:"bytes,2,opt,name=provider,oneof"`
}
type OneOfResource_AllergyIntolerance struct {
	AllergyIntolerance *AllergyIntolerance `protobuf:"bytes,3,opt,name=allergy_intolerance,json=allergyIntolerance,oneof"`
}
type OneOfResource_Encounter struct {
	Encounter *Encounter `protobuf:"bytes,4,opt,name=encounter,oneof"`
}
type OneOfResource_Condition struct {
	Condition *ConditionData `protobuf:"bytes,5,opt,name=condition,oneof"`
}
type OneOfResource_Precedure struct {
	Precedure *Procedure `protobuf:"bytes,6,opt,name=precedure,oneof"`
}
type OneOfResource_MedicationRequest struct {
	MedicationRequest *MedicationRequest `protobuf:"bytes,7,opt,name=medication_request,json=medicationRequest,oneof"`
}
type OneOfResource_Observation struct {
	Observation *Observation `protobuf:"bytes,8,opt,name=observation,oneof"`
}
type OneOfResource_DiagnosticReport struct {
	DiagnosticReport *DiagnosticReport `protobuf:"bytes,9,opt,name=diagnostic_report,json=diagnosticReport,oneof"`
}
type OneOfResource_Immunication struct {
	Immunication *Immunization `protobuf:"bytes,10,opt,name=immunication,oneof"`
}
type OneOfResource_Careplan struct {
	Careplan *CarePlan `protobuf:"bytes,11,opt,name=careplan,oneof"`
}
type OneOfResource_Goal struct {
	Goal *Goal `protobuf:"bytes,12,opt,name=goal,oneof"`
}
type OneOfResource_Organization struct {
	Organization *OrganizationData `protobuf:"bytes,13,opt,name=organization,oneof"`
}

func (*OneOfResource_Patient) isOneOfResource_Resource()            {}
func (*OneOfResource_Provider) isOneOfResource_Resource()           {}
func (*OneOfResource_AllergyIntolerance) isOneOfResource_Resource() {}
func (*OneOfResource_Encounter) isOneOfResource_Resource()          {}
func (*OneOfResource_Condition) isOneOfResource_Resource()          {}
func (*OneOfResource_Precedure) isOneOfResource_Resource()          {}
func (*OneOfResource_MedicationRequest) isOneOfResource_Resource()  {}
func (*OneOfResource_Observation) isOneOfResource_Resource()        {}
func (*OneOfResource_DiagnosticReport) isOneOfResource_Resource()   {}
func (*OneOfResource_Immunication) isOneOfResource_Resource()       {}
func (*OneOfResource_Careplan) isOneOfResource_Resource()           {}
func (*OneOfResource_Goal) isOneOfResource_Resource()               {}
func (*OneOfResource_Organization) isOneOfResource_Resource()       {}

func (m *OneOfResource) GetResource() isOneOfResource_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *OneOfResource) GetPatient() *PatientData {
	if x, ok := m.GetResource().(*OneOfResource_Patient); ok {
		return x.Patient
	}
	return nil
}

func (m *OneOfResource) GetProvider() *PractitionerData {
	if x, ok := m.GetResource().(*OneOfResource_Provider); ok {
		return x.Provider
	}
	return nil
}

func (m *OneOfResource) GetAllergyIntolerance() *AllergyIntolerance {
	if x, ok := m.GetResource().(*OneOfResource_AllergyIntolerance); ok {
		return x.AllergyIntolerance
	}
	return nil
}

func (m *OneOfResource) GetEncounter() *Encounter {
	if x, ok := m.GetResource().(*OneOfResource_Encounter); ok {
		return x.Encounter
	}
	return nil
}

func (m *OneOfResource) GetCondition() *ConditionData {
	if x, ok := m.GetResource().(*OneOfResource_Condition); ok {
		return x.Condition
	}
	return nil
}

func (m *OneOfResource) GetPrecedure() *Procedure {
	if x, ok := m.GetResource().(*OneOfResource_Precedure); ok {
		return x.Precedure
	}
	return nil
}

func (m *OneOfResource) GetMedicationRequest() *MedicationRequest {
	if x, ok := m.GetResource().(*OneOfResource_MedicationRequest); ok {
		return x.MedicationRequest
	}
	return nil
}

func (m *OneOfResource) GetObservation() *Observation {
	if x, ok := m.GetResource().(*OneOfResource_Observation); ok {
		return x.Observation
	}
	return nil
}

func (m *OneOfResource) GetDiagnosticReport() *DiagnosticReport {
	if x, ok := m.GetResource().(*OneOfResource_DiagnosticReport); ok {
		return x.DiagnosticReport
	}
	return nil
}

func (m *OneOfResource) GetImmunication() *Immunization {
	if x, ok := m.GetResource().(*OneOfResource_Immunication); ok {
		return x.Immunication
	}
	return nil
}

func (m *OneOfResource) GetCareplan() *CarePlan {
	if x, ok := m.GetResource().(*OneOfResource_Careplan); ok {
		return x.Careplan
	}
	return nil
}

func (m *OneOfResource) GetGoal() *Goal {
	if x, ok := m.GetResource().(*OneOfResource_Goal); ok {
		return x.Goal
	}
	return nil
}

func (m *OneOfResource) GetOrganization() *OrganizationData {
	if x, ok := m.GetResource().(*OneOfResource_Organization); ok {
		return x.Organization
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*OneOfResource) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _OneOfResource_OneofMarshaler, _OneOfResource_OneofUnmarshaler, _OneOfResource_OneofSizer, []interface{}{
		(*OneOfResource_Patient)(nil),
		(*OneOfResource_Provider)(nil),
		(*OneOfResource_AllergyIntolerance)(nil),
		(*OneOfResource_Encounter)(nil),
		(*OneOfResource_Condition)(nil),
		(*OneOfResource_Precedure)(nil),
		(*OneOfResource_MedicationRequest)(nil),
		(*OneOfResource_Observation)(nil),
		(*OneOfResource_DiagnosticReport)(nil),
		(*OneOfResource_Immunication)(nil),
		(*OneOfResource_Careplan)(nil),
		(*OneOfResource_Goal)(nil),
		(*OneOfResource_Organization)(nil),
	}
}

func _OneOfResource_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*OneOfResource)
	// resource
	switch x := m.Resource.(type) {
	case *OneOfResource_Patient:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Patient); err != nil {
			return err
		}
	case *OneOfResource_Provider:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Provider); err != nil {
			return err
		}
	case *OneOfResource_AllergyIntolerance:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AllergyIntolerance); err != nil {
			return err
		}
	case *OneOfResource_Encounter:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Encounter); err != nil {
			return err
		}
	case *OneOfResource_Condition:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Condition); err != nil {
			return err
		}
	case *OneOfResource_Precedure:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Precedure); err != nil {
			return err
		}
	case *OneOfResource_MedicationRequest:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MedicationRequest); err != nil {
			return err
		}
	case *OneOfResource_Observation:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Observation); err != nil {
			return err
		}
	case *OneOfResource_DiagnosticReport:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DiagnosticReport); err != nil {
			return err
		}
	case *OneOfResource_Immunication:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Immunication); err != nil {
			return err
		}
	case *OneOfResource_Careplan:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Careplan); err != nil {
			return err
		}
	case *OneOfResource_Goal:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Goal); err != nil {
			return err
		}
	case *OneOfResource_Organization:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Organization); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("OneOfResource.Resource has unexpected type %T", x)
	}
	return nil
}

func _OneOfResource_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*OneOfResource)
	switch tag {
	case 1: // resource.patient
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PatientData)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Patient{msg}
		return true, err
	case 2: // resource.provider
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PractitionerData)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Provider{msg}
		return true, err
	case 3: // resource.allergy_intolerance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AllergyIntolerance)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_AllergyIntolerance{msg}
		return true, err
	case 4: // resource.encounter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Encounter)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Encounter{msg}
		return true, err
	case 5: // resource.condition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConditionData)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Condition{msg}
		return true, err
	case 6: // resource.precedure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Procedure)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Precedure{msg}
		return true, err
	case 7: // resource.medication_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MedicationRequest)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_MedicationRequest{msg}
		return true, err
	case 8: // resource.observation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Observation)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Observation{msg}
		return true, err
	case 9: // resource.diagnostic_report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DiagnosticReport)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_DiagnosticReport{msg}
		return true, err
	case 10: // resource.immunication
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Immunization)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Immunication{msg}
		return true, err
	case 11: // resource.careplan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CarePlan)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Careplan{msg}
		return true, err
	case 12: // resource.goal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Goal)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Goal{msg}
		return true, err
	case 13: // resource.organization
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OrganizationData)
		err := b.DecodeMessage(msg)
		m.Resource = &OneOfResource_Organization{msg}
		return true, err
	default:
		return false, nil
	}
}

func _OneOfResource_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*OneOfResource)
	// resource
	switch x := m.Resource.(type) {
	case *OneOfResource_Patient:
		s := proto.Size(x.Patient)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Provider:
		s := proto.Size(x.Provider)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_AllergyIntolerance:
		s := proto.Size(x.AllergyIntolerance)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Encounter:
		s := proto.Size(x.Encounter)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Condition:
		s := proto.Size(x.Condition)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Precedure:
		s := proto.Size(x.Precedure)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_MedicationRequest:
		s := proto.Size(x.MedicationRequest)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Observation:
		s := proto.Size(x.Observation)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_DiagnosticReport:
		s := proto.Size(x.DiagnosticReport)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Immunication:
		s := proto.Size(x.Immunication)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Careplan:
		s := proto.Size(x.Careplan)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Goal:
		s := proto.Size(x.Goal)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OneOfResource_Organization:
		s := proto.Size(x.Organization)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Bundle)(nil), "buffer.Bundle")
	proto.RegisterType((*Entry)(nil), "buffer.Entry")
	proto.RegisterType((*OneOfResource)(nil), "buffer.OneOfResource")
}

func init() { proto.RegisterFile("bundle.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 602 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x53, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x4d, 0xb7, 0xb6, 0x6b, 0x6f, 0xd2, 0xdf, 0xd6, 0xbb, 0xfd, 0xc0, 0xf4, 0xa9, 0x2a, 0x2f,
	0x7b, 0x2a, 0xa2, 0x08, 0x90, 0x90, 0x40, 0x62, 0x0c, 0x2d, 0x43, 0x4c, 0x9d, 0x2c, 0x78, 0x9e,
	0xdc, 0xc4, 0xad, 0xa2, 0xb9, 0x76, 0x70, 0x9d, 0x49, 0xe3, 0x43, 0xf0, 0x0d, 0xf8, 0xae, 0x28,
	0x4e, 0x9c, 0x3f, 0xdd, 0x5b, 0xee, 0xbd, 0xe7, 0x1c, 0x3b, 0xd7, 0xe7, 0x40, 0xb0, 0xca, 0x64,
	0x2c, 0xf8, 0x3c, 0xd5, 0xca, 0x28, 0xec, 0xaf, 0xb2, 0xf5, 0x9a, 0xeb, 0xc9, 0x28, 0x65, 0x26,
	0xe1, 0xd2, 0x14, 0xed, 0x09, 0xa6, 0x9a, 0x45, 0x26, 0x31, 0x89, 0x92, 0x5c, 0x97, 0x3d, 0xc2,
	0x84, 0xe0, 0x7a, 0xf3, 0x78, 0x2d, 0x8d, 0x12, 0x5c, 0x33, 0x19, 0x95, 0x22, 0x93, 0x63, 0x2e,
	0x23, 0x95, 0x49, 0x53, 0x41, 0x8f, 0x23, 0x25, 0x63, 0xcb, 0x76, 0x8d, 0x54, 0xab, 0x88, 0xc7,
	0x99, 0x76, 0x94, 0xe7, 0x5b, 0x1e, 0x27, 0x11, 0xcb, 0x21, 0x94, 0xff, 0xca, 0xf8, 0xce, 0x9d,
	0x3c, 0x56, 0xab, 0x1d, 0xd7, 0x0f, 0xac, 0x41, 0x7e, 0x16, 0x27, 0x6c, 0x23, 0xd5, 0xce, 0x24,
	0x11, 0xe5, 0xa9, 0xd2, 0xd5, 0x25, 0x93, 0xed, 0x36, 0x93, 0xc9, 0xef, 0x26, 0xf6, 0xbf, 0x88,
	0x69, 0x9e, 0x0a, 0xe6, 0x6a, 0xd8, 0x28, 0x26, 0x1c, 0x5e, 0xe9, 0x0d, 0xdb, 0xc3, 0x07, 0x91,
	0xda, 0x6e, 0x5d, 0x35, 0xfb, 0xdb, 0x81, 0xfe, 0x85, 0x5d, 0x0f, 0xce, 0x20, 0xd0, 0x7c, 0xa7,
	0x32, 0x1d, 0xf1, 0x1f, 0x8f, 0x29, 0x27, 0x9d, 0x69, 0xe7, 0x7c, 0x48, 0x5b, 0x3d, 0x9c, 0x42,
	0x57, 0x24, 0xf2, 0x9e, 0x1c, 0x4c, 0x0f, 0xcf, 0xfd, 0x45, 0x30, 0x2f, 0x76, 0x39, 0xff, 0x9e,
	0xc8, 0x7b, 0x6a, 0x27, 0x78, 0x06, 0x3d, 0xa3, 0x0c, 0x13, 0xe4, 0x70, 0xda, 0x39, 0x3f, 0xa4,
	0x45, 0x81, 0x08, 0x5d, 0x93, 0x6b, 0x76, 0xad, 0xa6, 0xfd, 0xc6, 0x97, 0xd0, 0xe3, 0xd2, 0xe8,
	0x47, 0xd2, 0xb3, 0x62, 0x23, 0x27, 0xf6, 0x35, 0x6f, 0xd2, 0x62, 0x36, 0xfb, 0x08, 0x3d, 0x5b,
	0x23, 0x81, 0xa3, 0x75, 0x26, 0xc4, 0x4f, 0x2d, 0xca, 0x8b, 0xb9, 0x12, 0x27, 0x30, 0x70, 0x77,
	0x24, 0x07, 0x76, 0x54, 0xd5, 0xb3, 0x3f, 0x7d, 0x18, 0x2d, 0x25, 0x5f, 0xae, 0x69, 0xd9, 0xc1,
	0x57, 0x70, 0x54, 0x3e, 0xbc, 0xd5, 0xf1, 0x17, 0xa7, 0xee, 0xdc, 0xdb, 0xa2, 0x7d, 0xc9, 0x0c,
	0x0b, 0x3d, 0xea, 0x50, 0xf8, 0x0e, 0x06, 0xa9, 0x56, 0x0f, 0x49, 0xcc, 0xb5, 0x95, 0xf7, 0x17,
	0xa4, 0x62, 0x34, 0x2c, 0x53, 0xd2, 0x2a, 0x2c, 0xde, 0xc0, 0x69, 0x69, 0x9f, 0xbb, 0xa4, 0xf6,
	0x8f, 0x5d, 0x8b, 0xbf, 0x98, 0x38, 0x89, 0xcf, 0x4f, 0x1c, 0x16, 0x7a, 0x14, 0x9f, 0xfa, 0x0e,
	0x5f, 0xc3, 0xb0, 0xf2, 0x9c, 0x5d, 0xa3, 0xbf, 0x18, 0xd7, 0x1b, 0x2b, 0x07, 0xa1, 0x47, 0x6b,
	0x14, 0xbe, 0x85, 0x61, 0xe5, 0x4a, 0xd2, 0xb3, 0x94, 0xff, 0x1d, 0xe5, 0x8b, 0x1b, 0x94, 0xf7,
	0xae, 0x91, 0xf9, 0x49, 0xa9, 0xe6, 0x85, 0x77, 0x49, 0xbf, 0x7d, 0xd2, 0xad, 0x33, 0x75, 0x4e,
	0xa9, 0x50, 0xf8, 0x0d, 0xb0, 0x76, 0xf7, 0x9d, 0x2e, 0xec, 0x4d, 0x8e, 0x2c, 0xf7, 0x85, 0xe3,
	0xde, 0xec, 0xfb, 0x3f, 0xf4, 0xe8, 0xf8, 0x49, 0x28, 0xf0, 0x3d, 0xf8, 0x8d, 0x40, 0x90, 0x41,
	0xfb, 0x91, 0x96, 0xf5, 0x28, 0xf4, 0x68, 0x13, 0x89, 0x57, 0x30, 0xae, 0x63, 0x73, 0xa7, 0x6d,
	0x6e, 0xc8, 0xb0, 0xfd, 0x62, 0x97, 0x7b, 0xb9, 0x0a, 0x3d, 0x7a, 0xb2, 0x9f, 0x35, 0xfc, 0x00,
	0x41, 0x91, 0xb3, 0xe2, 0x62, 0x04, 0xac, 0xc6, 0x99, 0xd3, 0xb8, 0x6e, 0x64, 0x30, 0xf4, 0x68,
	0x0b, 0x8b, 0x73, 0x18, 0xb8, 0x3c, 0x12, 0xdf, 0xf2, 0x4e, 0xaa, 0x95, 0x33, 0xcd, 0x6f, 0x05,
	0xcb, 0x39, 0x15, 0x06, 0x67, 0xd0, 0xcd, 0xf3, 0x4a, 0x02, 0x8b, 0xad, 0x02, 0x75, 0xa5, 0x98,
	0x08, 0x3d, 0x6a, 0x67, 0xf8, 0x09, 0x82, 0x66, 0x8e, 0xc9, 0xa8, 0xfd, 0x4f, 0xcb, 0xc6, 0xac,
	0x7c, 0xcd, 0x16, 0xfe, 0x02, 0xea, 0x80, 0xac, 0xfa, 0x36, 0xf6, 0x6f, 0xfe, 0x05, 0x00, 0x00,
	0xff, 0xff, 0xd9, 0x43, 0xaa, 0x71, 0x14, 0x05, 0x00, 0x00,
}
