// Code generated by protoc-gen-go. DO NOT EDIT.
// source: medicationRequest.proto

package buffer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MedicationRequest struct {
	Status              string               `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Definition          []*Definition        `protobuf:"bytes,2,rep,name=definition" json:"definition,omitempty"`
	AuthoredOn          string               `protobuf:"bytes,3,opt,name=authoredOn" json:"authoredOn,omitempty"`
	GroupIdentifier     *GroupIdentifier     `protobuf:"bytes,4,opt,name=groupIdentifier" json:"groupIdentifier,omitempty"`
	ResourceType        string               `protobuf:"bytes,5,opt,name=resourceType" json:"resourceType,omitempty"`
	Text                *Text                `protobuf:"bytes,6,opt,name=text" json:"text,omitempty"`
	DispenseRequest     *DispenseRequest     `protobuf:"bytes,7,opt,name=dispenseRequest" json:"dispenseRequest,omitempty"`
	BasedOn             []*BasedOn           `protobuf:"bytes,8,rep,name=basedOn" json:"basedOn,omitempty"`
	Substitution        *Substitution        `protobuf:"bytes,9,opt,name=substitution" json:"substitution,omitempty"`
	Note                []*Note              `protobuf:"bytes,10,rep,name=note" json:"note,omitempty"`
	Contained           []*Contained         `protobuf:"bytes,11,rep,name=contained" json:"contained,omitempty"`
	MedicationReference *MedicationReference `protobuf:"bytes,12,opt,name=medicationReference" json:"medicationReference,omitempty"`
	Intent              string               `protobuf:"bytes,13,opt,name=intent" json:"intent,omitempty"`
	Context             *Context             `protobuf:"bytes,14,opt,name=context" json:"context,omitempty"`
	Requester           *MRequester          `protobuf:"bytes,15,opt,name=requester" json:"requester,omitempty"`
	DosageInstruction   []*DosageInstruction `protobuf:"bytes,16,rep,name=dosageInstruction" json:"dosageInstruction,omitempty"`
	Identifier          []*Identifier        `protobuf:"bytes,17,rep,name=identifier" json:"identifier,omitempty"`
	Id                  string               `protobuf:"bytes,18,opt,name=id" json:"id,omitempty"`
	Subject             *Subject             `protobuf:"bytes,19,opt,name=subject" json:"subject,omitempty"`
	Meta                *Meta                `protobuf:"bytes,20,opt,name=meta" json:"meta,omitempty"`
}

func (m *MedicationRequest) Reset()                    { *m = MedicationRequest{} }
func (m *MedicationRequest) String() string            { return proto.CompactTextString(m) }
func (*MedicationRequest) ProtoMessage()               {}
func (*MedicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *MedicationRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MedicationRequest) GetDefinition() []*Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *MedicationRequest) GetAuthoredOn() string {
	if m != nil {
		return m.AuthoredOn
	}
	return ""
}

func (m *MedicationRequest) GetGroupIdentifier() *GroupIdentifier {
	if m != nil {
		return m.GroupIdentifier
	}
	return nil
}

func (m *MedicationRequest) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *MedicationRequest) GetText() *Text {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *MedicationRequest) GetDispenseRequest() *DispenseRequest {
	if m != nil {
		return m.DispenseRequest
	}
	return nil
}

func (m *MedicationRequest) GetBasedOn() []*BasedOn {
	if m != nil {
		return m.BasedOn
	}
	return nil
}

func (m *MedicationRequest) GetSubstitution() *Substitution {
	if m != nil {
		return m.Substitution
	}
	return nil
}

func (m *MedicationRequest) GetNote() []*Note {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *MedicationRequest) GetContained() []*Contained {
	if m != nil {
		return m.Contained
	}
	return nil
}

func (m *MedicationRequest) GetMedicationReference() *MedicationReference {
	if m != nil {
		return m.MedicationReference
	}
	return nil
}

func (m *MedicationRequest) GetIntent() string {
	if m != nil {
		return m.Intent
	}
	return ""
}

func (m *MedicationRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *MedicationRequest) GetRequester() *MRequester {
	if m != nil {
		return m.Requester
	}
	return nil
}

func (m *MedicationRequest) GetDosageInstruction() []*DosageInstruction {
	if m != nil {
		return m.DosageInstruction
	}
	return nil
}

func (m *MedicationRequest) GetIdentifier() []*Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *MedicationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MedicationRequest) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *MedicationRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type DosageInstruction struct {
	Sequence     int64         `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	Text         string        `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Route        *Route        `protobuf:"bytes,3,opt,name=route" json:"route,omitempty"`
	DoseQuantity *DoseQuantity `protobuf:"bytes,4,opt,name=doseQuantity" json:"doseQuantity,omitempty"`
	Timing       *Timing       `protobuf:"bytes,5,opt,name=timing" json:"timing,omitempty"`
	Method       *Method       `protobuf:"bytes,6,opt,name=method" json:"method,omitempty"`
}

func (m *DosageInstruction) Reset()                    { *m = DosageInstruction{} }
func (m *DosageInstruction) String() string            { return proto.CompactTextString(m) }
func (*DosageInstruction) ProtoMessage()               {}
func (*DosageInstruction) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *DosageInstruction) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *DosageInstruction) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *DosageInstruction) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *DosageInstruction) GetDoseQuantity() *DoseQuantity {
	if m != nil {
		return m.DoseQuantity
	}
	return nil
}

func (m *DosageInstruction) GetTiming() *Timing {
	if m != nil {
		return m.Timing
	}
	return nil
}

func (m *DosageInstruction) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

type Method struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *Method) Reset()                    { *m = Method{} }
func (m *Method) String() string            { return proto.CompactTextString(m) }
func (*Method) ProtoMessage()               {}
func (*Method) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *Method) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type Timing struct {
	Repeat *Repeat `protobuf:"bytes,1,opt,name=repeat" json:"repeat,omitempty"`
}

func (m *Timing) Reset()                    { *m = Timing{} }
func (m *Timing) String() string            { return proto.CompactTextString(m) }
func (*Timing) ProtoMessage()               {}
func (*Timing) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *Timing) GetRepeat() *Repeat {
	if m != nil {
		return m.Repeat
	}
	return nil
}

type Repeat struct {
	Frequency    int64         `protobuf:"varint,1,opt,name=frequency" json:"frequency,omitempty"`
	BoundsPeriod *BoundsPeriod `protobuf:"bytes,2,opt,name=boundsPeriod" json:"boundsPeriod,omitempty"`
	Period       int64         `protobuf:"varint,3,opt,name=period" json:"period,omitempty"`
	PeriodUnit   string        `protobuf:"bytes,4,opt,name=periodUnit" json:"periodUnit,omitempty"`
}

func (m *Repeat) Reset()                    { *m = Repeat{} }
func (m *Repeat) String() string            { return proto.CompactTextString(m) }
func (*Repeat) ProtoMessage()               {}
func (*Repeat) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *Repeat) GetFrequency() int64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *Repeat) GetBoundsPeriod() *BoundsPeriod {
	if m != nil {
		return m.BoundsPeriod
	}
	return nil
}

func (m *Repeat) GetPeriod() int64 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *Repeat) GetPeriodUnit() string {
	if m != nil {
		return m.PeriodUnit
	}
	return ""
}

type BoundsPeriod struct {
	Start string `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (m *BoundsPeriod) Reset()                    { *m = BoundsPeriod{} }
func (m *BoundsPeriod) String() string            { return proto.CompactTextString(m) }
func (*BoundsPeriod) ProtoMessage()               {}
func (*BoundsPeriod) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *BoundsPeriod) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *BoundsPeriod) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type DoseQuantity struct {
	Code   string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Unit   string `protobuf:"bytes,2,opt,name=unit" json:"unit,omitempty"`
	Value  int64  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	System string `protobuf:"bytes,4,opt,name=system" json:"system,omitempty"`
}

func (m *DoseQuantity) Reset()                    { *m = DoseQuantity{} }
func (m *DoseQuantity) String() string            { return proto.CompactTextString(m) }
func (*DoseQuantity) ProtoMessage()               {}
func (*DoseQuantity) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{6} }

func (m *DoseQuantity) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DoseQuantity) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *DoseQuantity) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *DoseQuantity) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

type Route struct {
	Coding []*Coding `protobuf:"bytes,1,rep,name=coding" json:"coding,omitempty"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{7} }

func (m *Route) GetCoding() []*Coding {
	if m != nil {
		return m.Coding
	}
	return nil
}

type MRequester struct {
	OnBehalfOf *OnBehalfOf `protobuf:"bytes,1,opt,name=onBehalfOf" json:"onBehalfOf,omitempty"`
	Agent      *Agent      `protobuf:"bytes,2,opt,name=agent" json:"agent,omitempty"`
}

func (m *MRequester) Reset()                    { *m = MRequester{} }
func (m *MRequester) String() string            { return proto.CompactTextString(m) }
func (*MRequester) ProtoMessage()               {}
func (*MRequester) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{8} }

func (m *MRequester) GetOnBehalfOf() *OnBehalfOf {
	if m != nil {
		return m.OnBehalfOf
	}
	return nil
}

func (m *MRequester) GetAgent() *Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

type Agent struct {
	Display   string `protobuf:"bytes,1,opt,name=display" json:"display,omitempty"`
	Reference string `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
}

func (m *Agent) Reset()                    { *m = Agent{} }
func (m *Agent) String() string            { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()               {}
func (*Agent) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{9} }

func (m *Agent) GetDisplay() string {
	if m != nil {
		return m.Display
	}
	return ""
}

func (m *Agent) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type OnBehalfOf struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *OnBehalfOf) Reset()                    { *m = OnBehalfOf{} }
func (m *OnBehalfOf) String() string            { return proto.CompactTextString(m) }
func (*OnBehalfOf) ProtoMessage()               {}
func (*OnBehalfOf) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{10} }

func (m *OnBehalfOf) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type MedicationReference struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *MedicationReference) Reset()                    { *m = MedicationReference{} }
func (m *MedicationReference) String() string            { return proto.CompactTextString(m) }
func (*MedicationReference) ProtoMessage()               {}
func (*MedicationReference) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{11} }

func (m *MedicationReference) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Substitution struct {
	Reason  *Reason `protobuf:"bytes,1,opt,name=reason" json:"reason,omitempty"`
	Allowed bool    `protobuf:"varint,2,opt,name=allowed" json:"allowed,omitempty"`
}

func (m *Substitution) Reset()                    { *m = Substitution{} }
func (m *Substitution) String() string            { return proto.CompactTextString(m) }
func (*Substitution) ProtoMessage()               {}
func (*Substitution) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{12} }

func (m *Substitution) GetReason() *Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *Substitution) GetAllowed() bool {
	if m != nil {
		return m.Allowed
	}
	return false
}

type DispenseRequest struct {
	ValidityPeriod         *ValidityPeriod         `protobuf:"bytes,1,opt,name=validityPeriod" json:"validityPeriod,omitempty"`
	Performer              *Performer              `protobuf:"bytes,2,opt,name=performer" json:"performer,omitempty"`
	ExpectedSupplyDuration *ExpectedSupplyDuration `protobuf:"bytes,3,opt,name=expectedSupplyDuration" json:"expectedSupplyDuration,omitempty"`
	NumberOfRepeatsAllowed int64                   `protobuf:"varint,4,opt,name=numberOfRepeatsAllowed" json:"numberOfRepeatsAllowed,omitempty"`
	Quantity               *Quantity               `protobuf:"bytes,5,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *DispenseRequest) Reset()                    { *m = DispenseRequest{} }
func (m *DispenseRequest) String() string            { return proto.CompactTextString(m) }
func (*DispenseRequest) ProtoMessage()               {}
func (*DispenseRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{13} }

func (m *DispenseRequest) GetValidityPeriod() *ValidityPeriod {
	if m != nil {
		return m.ValidityPeriod
	}
	return nil
}

func (m *DispenseRequest) GetPerformer() *Performer {
	if m != nil {
		return m.Performer
	}
	return nil
}

func (m *DispenseRequest) GetExpectedSupplyDuration() *ExpectedSupplyDuration {
	if m != nil {
		return m.ExpectedSupplyDuration
	}
	return nil
}

func (m *DispenseRequest) GetNumberOfRepeatsAllowed() int64 {
	if m != nil {
		return m.NumberOfRepeatsAllowed
	}
	return 0
}

func (m *DispenseRequest) GetQuantity() *Quantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

type Quantity struct {
	Code   string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Unit   string `protobuf:"bytes,2,opt,name=unit" json:"unit,omitempty"`
	Value  int64  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	System string `protobuf:"bytes,4,opt,name=system" json:"system,omitempty"`
}

func (m *Quantity) Reset()                    { *m = Quantity{} }
func (m *Quantity) String() string            { return proto.CompactTextString(m) }
func (*Quantity) ProtoMessage()               {}
func (*Quantity) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{14} }

func (m *Quantity) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Quantity) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *Quantity) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Quantity) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

type ExpectedSupplyDuration struct {
	Code   string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Unit   string `protobuf:"bytes,2,opt,name=unit" json:"unit,omitempty"`
	Value  int64  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	System string `protobuf:"bytes,4,opt,name=system" json:"system,omitempty"`
}

func (m *ExpectedSupplyDuration) Reset()                    { *m = ExpectedSupplyDuration{} }
func (m *ExpectedSupplyDuration) String() string            { return proto.CompactTextString(m) }
func (*ExpectedSupplyDuration) ProtoMessage()               {}
func (*ExpectedSupplyDuration) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{15} }

func (m *ExpectedSupplyDuration) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ExpectedSupplyDuration) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *ExpectedSupplyDuration) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ExpectedSupplyDuration) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

type ValidityPeriod struct {
	Start string `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (m *ValidityPeriod) Reset()                    { *m = ValidityPeriod{} }
func (m *ValidityPeriod) String() string            { return proto.CompactTextString(m) }
func (*ValidityPeriod) ProtoMessage()               {}
func (*ValidityPeriod) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{16} }

func (m *ValidityPeriod) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *ValidityPeriod) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type GroupIdentifier struct {
	Use    string `protobuf:"bytes,1,opt,name=use" json:"use,omitempty"`
	System string `protobuf:"bytes,2,opt,name=system" json:"system,omitempty"`
	Value  string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *GroupIdentifier) Reset()                    { *m = GroupIdentifier{} }
func (m *GroupIdentifier) String() string            { return proto.CompactTextString(m) }
func (*GroupIdentifier) ProtoMessage()               {}
func (*GroupIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{17} }

func (m *GroupIdentifier) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *GroupIdentifier) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *GroupIdentifier) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Definition struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Definition) Reset()                    { *m = Definition{} }
func (m *Definition) String() string            { return proto.CompactTextString(m) }
func (*Definition) ProtoMessage()               {}
func (*Definition) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{18} }

func (m *Definition) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func init() {
	proto.RegisterType((*MedicationRequest)(nil), "buffer.MedicationRequest")
	proto.RegisterType((*DosageInstruction)(nil), "buffer.DosageInstruction")
	proto.RegisterType((*Method)(nil), "buffer.Method")
	proto.RegisterType((*Timing)(nil), "buffer.Timing")
	proto.RegisterType((*Repeat)(nil), "buffer.Repeat")
	proto.RegisterType((*BoundsPeriod)(nil), "buffer.BoundsPeriod")
	proto.RegisterType((*DoseQuantity)(nil), "buffer.DoseQuantity")
	proto.RegisterType((*Route)(nil), "buffer.Route")
	proto.RegisterType((*MRequester)(nil), "buffer.MRequester")
	proto.RegisterType((*Agent)(nil), "buffer.Agent")
	proto.RegisterType((*OnBehalfOf)(nil), "buffer.OnBehalfOf")
	proto.RegisterType((*MedicationReference)(nil), "buffer.MedicationReference")
	proto.RegisterType((*Substitution)(nil), "buffer.Substitution")
	proto.RegisterType((*DispenseRequest)(nil), "buffer.DispenseRequest")
	proto.RegisterType((*Quantity)(nil), "buffer.Quantity")
	proto.RegisterType((*ExpectedSupplyDuration)(nil), "buffer.ExpectedSupplyDuration")
	proto.RegisterType((*ValidityPeriod)(nil), "buffer.ValidityPeriod")
	proto.RegisterType((*GroupIdentifier)(nil), "buffer.GroupIdentifier")
	proto.RegisterType((*Definition)(nil), "buffer.Definition")
}

func init() { proto.RegisterFile("medicationRequest.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 1021 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x4e, 0x1b, 0x47,
	0x14, 0x96, 0x0d, 0x18, 0x7c, 0x70, 0x6c, 0x18, 0x10, 0xd9, 0xa6, 0x55, 0x84, 0xb6, 0x52, 0x45,
	0xab, 0x8a, 0x44, 0x44, 0x8a, 0x72, 0xd5, 0x0a, 0x4a, 0x15, 0xe5, 0xc2, 0x85, 0x0c, 0x34, 0xd7,
	0x5d, 0x7b, 0x8e, 0x61, 0x2a, 0x7b, 0xc6, 0x99, 0x99, 0x4d, 0xf1, 0x9b, 0xf4, 0xb6, 0x6f, 0xd2,
	0x67, 0xea, 0x13, 0x54, 0x67, 0x7e, 0xd6, 0xbb, 0x86, 0xb4, 0xb9, 0xc9, 0xdd, 0xcc, 0xf9, 0xbe,
	0x73, 0xe6, 0xfc, 0xef, 0xc2, 0xe3, 0x19, 0x0a, 0x39, 0x2e, 0x9c, 0xd4, 0x8a, 0xe3, 0xfb, 0x12,
	0xad, 0x3b, 0x9e, 0x1b, 0xed, 0x34, 0xeb, 0x8c, 0xca, 0xc9, 0x04, 0xcd, 0x93, 0xde, 0x58, 0xcf,
	0x66, 0x5a, 0x05, 0x69, 0xfe, 0xd7, 0x26, 0xec, 0x0e, 0x57, 0x35, 0xd8, 0x01, 0x74, 0xac, 0x2b,
	0x5c, 0x69, 0xb3, 0xd6, 0x61, 0xeb, 0xa8, 0xcb, 0xe3, 0x8d, 0x9d, 0x00, 0x08, 0x9c, 0x48, 0x25,
	0x89, 0x9c, 0xb5, 0x0f, 0xd7, 0x8e, 0xb6, 0x4f, 0xd8, 0x71, 0x30, 0x7c, 0x7c, 0x5e, 0x21, 0xbc,
	0xc6, 0x62, 0x4f, 0x01, 0x8a, 0xd2, 0xdd, 0x6a, 0x83, 0xe2, 0x42, 0x65, 0x6b, 0xde, 0x5e, 0x4d,
	0xc2, 0x4e, 0x61, 0x70, 0x63, 0x74, 0x39, 0x7f, 0x23, 0x50, 0x39, 0x39, 0x91, 0x68, 0xb2, 0xf5,
	0xc3, 0xd6, 0xd1, 0xf6, 0xc9, 0xe3, 0x64, 0xf8, 0x75, 0x13, 0xe6, 0xab, 0x7c, 0x96, 0x43, 0xcf,
	0xa0, 0xd5, 0xa5, 0x19, 0xe3, 0xf5, 0x62, 0x8e, 0xd9, 0x86, 0x7f, 0xa4, 0x21, 0x63, 0x87, 0xb0,
	0xee, 0xf0, 0xce, 0x65, 0x1d, 0x6f, 0xbb, 0x97, 0x6c, 0x5f, 0xe3, 0x9d, 0xe3, 0x1e, 0x21, 0x47,
	0x84, 0xb4, 0x73, 0x54, 0x16, 0x63, 0x1e, 0xb2, 0xcd, 0xa6, 0x23, 0xe7, 0x4d, 0x98, 0xaf, 0xf2,
	0xd9, 0xb7, 0xb0, 0x39, 0x2a, 0xac, 0x0f, 0x74, 0xcb, 0x27, 0x67, 0x90, 0x54, 0xcf, 0x82, 0x98,
	0x27, 0x9c, 0xbd, 0x82, 0x9e, 0x2d, 0x47, 0xd6, 0x49, 0x57, 0xfa, 0x64, 0x76, 0xfd, 0x53, 0xfb,
	0x89, 0x7f, 0x55, 0xc3, 0x78, 0x83, 0x49, 0x91, 0x28, 0xed, 0x30, 0x03, 0xff, 0x42, 0x15, 0xc9,
	0x2f, 0xda, 0x21, 0xf7, 0x08, 0x7b, 0x06, 0xdd, 0xb1, 0x56, 0xae, 0x90, 0x0a, 0x45, 0xb6, 0xed,
	0x69, 0xbb, 0x89, 0xf6, 0x53, 0x02, 0xf8, 0x92, 0xc3, 0x86, 0xb0, 0x57, 0x6f, 0x9b, 0x09, 0x1a,
	0x54, 0x63, 0xcc, 0x7a, 0xde, 0xa7, 0x2f, 0x93, 0xea, 0xf0, 0x3e, 0x85, 0x3f, 0xa4, 0x47, 0xed,
	0x23, 0x95, 0x43, 0xe5, 0xb2, 0x47, 0xa1, 0x7d, 0xc2, 0x8d, 0xd2, 0x43, 0x6f, 0x52, 0x19, 0xfa,
	0xde, 0xf4, 0xa0, 0xee, 0x15, 0x55, 0x22, 0xe1, 0xec, 0x39, 0x74, 0x4d, 0x48, 0x2a, 0x9a, 0x6c,
	0xe0, 0xc9, 0x55, 0xa3, 0x0d, 0x79, 0x42, 0xf8, 0x92, 0xc4, 0x5e, 0xc3, 0xae, 0xd0, 0xb6, 0xb8,
	0xc1, 0x37, 0xca, 0x3a, 0x53, 0x8e, 0x7d, 0x56, 0x77, 0x7c, 0xf0, 0x5f, 0x54, 0x05, 0x5c, 0x25,
	0xf0, 0xfb, 0x3a, 0xd4, 0xe4, 0x72, 0xd9, 0x8b, 0xbb, 0xcd, 0x26, 0xaf, 0xb5, 0x61, 0x8d, 0xc5,
	0xfa, 0xd0, 0x96, 0x22, 0x63, 0x3e, 0xda, 0xb6, 0x14, 0x14, 0xa9, 0x2d, 0x47, 0xbf, 0xe3, 0xd8,
	0x65, 0x7b, 0xcd, 0x48, 0xaf, 0x82, 0x98, 0x27, 0x9c, 0xca, 0x39, 0x43, 0x57, 0x64, 0xfb, 0xcd,
	0xc6, 0x1c, 0xa2, 0x2b, 0xb8, 0x47, 0xf2, 0x7f, 0x5a, 0xb0, 0x7b, 0xcf, 0x73, 0xf6, 0x04, 0xb6,
	0x2c, 0x05, 0x4f, 0x85, 0xa2, 0x29, 0x5d, 0xe3, 0xd5, 0x9d, 0xb1, 0xd8, 0xec, 0x6d, 0xef, 0x50,
	0x68, 0xef, 0xaf, 0x61, 0xc3, 0xe8, 0xd2, 0xa1, 0x1f, 0xc1, 0xed, 0x93, 0x47, 0xe9, 0x21, 0x4e,
	0x42, 0x1e, 0x30, 0xea, 0x4a, 0xa1, 0x2d, 0xbe, 0x2d, 0x0b, 0xe5, 0xa4, 0x5b, 0xc4, 0x49, 0xdc,
	0xaf, 0xe5, 0xaf, 0xc2, 0x78, 0x83, 0xc9, 0xbe, 0x81, 0x8e, 0x93, 0x33, 0xa9, 0x6e, 0xfc, 0xf4,
	0x6d, 0x9f, 0xf4, 0xab, 0x09, 0xf3, 0x52, 0x1e, 0x51, 0xe2, 0xcd, 0xd0, 0xdd, 0x6a, 0x11, 0x27,
	0xb1, 0x5f, 0x0b, 0xf8, 0x56, 0x0b, 0x1e, 0xd1, 0xfc, 0x39, 0x74, 0x82, 0x84, 0x34, 0xc6, 0x5a,
	0x90, 0xe5, 0x96, 0xaf, 0x45, 0x7f, 0xd9, 0x34, 0xc2, 0x5b, 0x0e, 0x28, 0x69, 0x5c, 0x57, 0x6f,
	0x18, 0x9c, 0x63, 0xe1, 0x7c, 0x62, 0x6a, 0x1a, 0xdc, 0x4b, 0x79, 0x44, 0xf3, 0x3f, 0x5b, 0xd0,
	0x09, 0x22, 0xf6, 0x15, 0x74, 0x27, 0x26, 0xa4, 0x6f, 0x11, 0xd3, 0xb9, 0x14, 0x50, 0x5a, 0x46,
	0xba, 0x54, 0xc2, 0x5e, 0xa2, 0x91, 0x5a, 0xf8, 0xbc, 0xd6, 0xd2, 0x72, 0x56, 0xc3, 0x78, 0x83,
	0x49, 0xa3, 0x30, 0x0f, 0x3a, 0x6b, 0xde, 0x68, 0xbc, 0xd1, 0x56, 0x0c, 0xa7, 0x5f, 0x95, 0x74,
	0x3e, 0xcd, 0x5d, 0x5e, 0x93, 0xe4, 0x2f, 0xa1, 0x57, 0xb7, 0xca, 0xf6, 0x61, 0xc3, 0xba, 0xc2,
	0xb8, 0xb8, 0x90, 0xc3, 0x85, 0xed, 0xc0, 0x1a, 0x2a, 0x11, 0xcb, 0x4c, 0xc7, 0x5c, 0x40, 0xaf,
	0x5e, 0x24, 0xea, 0x84, 0xb1, 0x16, 0x18, 0xd5, 0xfc, 0x99, 0x64, 0x25, 0xbd, 0x1a, 0xbb, 0x83,
	0xce, 0x64, 0xff, 0x43, 0x31, 0x2d, 0x31, 0xba, 0x19, 0x2e, 0xfe, 0x3b, 0xb0, 0xb0, 0x0e, 0x67,
	0xd1, 0xc3, 0x78, 0xcb, 0x9f, 0xc1, 0x86, 0x6f, 0x9b, 0x4f, 0xae, 0x0d, 0x02, 0x2c, 0xa7, 0x96,
	0x26, 0x4c, 0xab, 0x33, 0xbc, 0x2d, 0xa6, 0x93, 0x8b, 0x49, 0xac, 0x51, 0x35, 0x61, 0x17, 0x15,
	0xc2, 0x6b, 0x2c, 0x6a, 0xdf, 0xe2, 0x86, 0x56, 0x4a, 0xbb, 0xd9, 0xbe, 0xa7, 0x24, 0xe4, 0x01,
	0xcb, 0x7f, 0x84, 0x0d, 0x7f, 0x67, 0x19, 0x6c, 0xd2, 0x6e, 0x9e, 0x16, 0x8b, 0x18, 0x79, 0xba,
	0x52, 0xa1, 0x4d, 0xb5, 0xe0, 0x42, 0x06, 0x96, 0x82, 0xfc, 0x3b, 0x80, 0xe5, 0xfb, 0x4d, 0x6e,
	0x6b, 0x95, 0xfb, 0x02, 0xf6, 0x1e, 0xd8, 0x88, 0xff, 0xa3, 0x74, 0x09, 0xbd, 0xfa, 0x6a, 0x0f,
	0xad, 0x5a, 0x58, 0xad, 0xee, 0xb7, 0x2a, 0x49, 0x79, 0x44, 0x29, 0xa0, 0x62, 0x3a, 0xd5, 0x7f,
	0x60, 0xa8, 0xf6, 0x16, 0x4f, 0xd7, 0xfc, 0xef, 0x36, 0x0c, 0x56, 0x3e, 0x4c, 0xec, 0x07, 0xe8,
	0x7f, 0x28, 0xa6, 0x52, 0x48, 0xb7, 0x88, 0x1d, 0x1b, 0xac, 0x1f, 0x24, 0xeb, 0xef, 0x1a, 0x28,
	0x5f, 0x61, 0xd3, 0x07, 0x64, 0x8e, 0x66, 0xa2, 0xcd, 0x0c, 0x4d, 0x4c, 0x78, 0xf5, 0x01, 0xb9,
	0x4c, 0x00, 0x5f, 0x72, 0xd8, 0x3b, 0x38, 0xc0, 0xbb, 0x39, 0x8e, 0x1d, 0x8a, 0xab, 0x72, 0x3e,
	0x9f, 0x2e, 0xce, 0x4b, 0xe3, 0xf3, 0x12, 0xb7, 0xcd, 0xd3, 0xa4, 0xfd, 0xf3, 0x83, 0x2c, 0xfe,
	0x11, 0x6d, 0xf6, 0x12, 0x0e, 0x54, 0x39, 0x1b, 0xa1, 0xb9, 0x98, 0x84, 0x41, 0xb5, 0xa7, 0x31,
	0x0b, 0xeb, 0xbe, 0x4f, 0x3f, 0x82, 0xb2, 0xef, 0x61, 0xeb, 0x7d, 0xda, 0x61, 0x61, 0x1f, 0xed,
	0x24, 0x0f, 0xaa, 0xfd, 0x55, 0x31, 0xf2, 0xdf, 0x60, 0xeb, 0x33, 0x0f, 0x8c, 0x82, 0x83, 0x87,
	0x23, 0xff, 0x4c, 0xef, 0xbd, 0x82, 0x7e, 0xb3, 0xc4, 0x9f, 0xbc, 0x40, 0xde, 0xc2, 0x60, 0xe5,
	0x7f, 0x8b, 0x48, 0xa5, 0x4d, 0x1e, 0xd2, 0xb1, 0xf6, 0x6c, 0xbb, 0xfe, 0x6c, 0xd3, 0xc9, 0x6e,
	0x74, 0x92, 0x86, 0x6a, 0xf9, 0x6f, 0xf8, 0xdf, 0xf3, 0x31, 0xea, 0xf8, 0xdf, 0xd2, 0x17, 0xff,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xbe, 0x2c, 0x40, 0xc7, 0x0a, 0x00, 0x00,
}
